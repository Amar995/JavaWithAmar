{"id":7615,"date":"2016-07-30T15:06:49","date_gmt":"2016-07-30T09:36:49","guid":{"rendered":"http:\/\/howtodoinjava.com\/?page_id=7615"},"modified":"2021-06-20T20:14:03","modified_gmt":"2021-06-20T14:44:03","slug":"spring-security-tutorial","status":"publish","type":"page","link":"https:\/\/howtodoinjava.com\/spring-security-tutorial\/","title":{"rendered":"Spring Security Tutorial"},"content":{"rendered":"<p><a href=\"https:\/\/projects.spring.io\/spring-security\/\" target=\"_blank\" rel=\"noopener noreferrer\">Spring Security<\/a> is a framework that focuses on providing both authentication and authorization to Java EE-based enterprise software applications.<\/p>\n<p>Spring security is the de-facto standard for securing Spring-based applications. Spring Security requires a <a href=\"https:\/\/howtodoinjava.com\/java-8-tutorial\/\">Java 8<\/a> or higher Runtime Environment.<\/p>\n<p><img loading=\"lazy\" class=\"aligncenter size-full wp-image-7616\" src=\"https:\/\/howtodoinjava.com\/wp-content\/uploads\/2016\/07\/Spring-Security-logo.png\" alt=\"Spring-Security-logo\" width=\"300\" height=\"225\" \/><\/p>\n<h2>1. Adding Spring Security<\/h2>\n<h4>1.1. Maven<\/h4>\n<p>To include <strong>spring security<\/strong> into the application, include below dependency:<\/p>\n<pre class=\"brush: xml; title: pom.xml; notranslate\" title=\"pom.xml\">\r\n&lt;dependencies&gt;\r\n        &lt;dependency&gt;\r\n\t\t&lt;groupId&gt;org.springframework.security&lt;\/groupId&gt;\r\n\t\t&lt;artifactId&gt;spring-security-config&lt;\/artifactId&gt;\r\n\t\t&lt;version&gt;5.5.0&lt;\/version&gt;\r\n\t&lt;\/dependency&gt;\r\n        &lt;dependency&gt;\r\n\t\t&lt;groupId&gt;org.springframework.security&lt;\/groupId&gt;\r\n\t\t&lt;artifactId&gt;spring-security-web&lt;\/artifactId&gt;\r\n\t\t&lt;version&gt;5.5.0&lt;\/version&gt;\r\n\t&lt;\/dependency&gt;\r\n&lt;\/dependencies&gt;\r\n<\/pre>\n<p>If we are using additional features like LDAP, OpenID, etc. we will need to also include the appropriate <a href=\"https:\/\/docs.spring.io\/spring-security\/site\/docs\/5.5.2\/reference\/html5\/#modules\" target=\"_blank\" rel=\"noopener noreferrer\">modules<\/a>.<\/p>\n<p>If we face any transitive dependency problem causing classpath issues at runtime, we may consider adding spring security <a href=\"https:\/\/howtodoinjava.com\/maven\/maven-bom-bill-of-materials-dependency\/\" target=\"_blank\" rel=\"noopener noreferrer\">BOM<\/a> file.<\/p>\n<pre class=\"brush: xml; title: pom.xml; notranslate\" title=\"pom.xml\">\r\n&lt;dependencies&gt;\r\n\t&lt;dependency&gt;\r\n\t\t&lt;groupId&gt;org.springframework&lt;\/groupId&gt;\r\n\t\t&lt;artifactId&gt;spring-framework-bom&lt;\/artifactId&gt;\r\n\t\t&lt;version&gt;5.3.7&lt;\/version&gt;\r\n\t\t&lt;type&gt;pom&lt;\/type&gt;\r\n\t\t&lt;scope&gt;import&lt;\/scope&gt;\r\n\t&lt;\/dependency&gt;\r\n&lt;\/dependencies&gt;\r\n<\/pre>\n<h4>1.2. Gradle<\/h4>\n<p>To include spring security in your gradle based project, include below dependency:<\/p>\n<pre class=\"brush: java; title: build.gradle; notranslate\" title=\"build.gradle\">\r\nrepositories {\r\n\tmavenCentral()\r\n}\r\ndependencies {\r\n\tcompile 'org.springframework.security:spring-security-web:5.5.0'\r\n\tcompile 'org.springframework.security:spring-security-config:5.5.0'\r\n}\r\n<\/pre>\n<h2>2. Spring Security Examples<\/h2>\n<p>Given spring security tutorials explain the various features of spring security in detail.<\/p>\n<h4><a href=\"https:\/\/howtodoinjava.com\/spring5\/security\/login-form-example\/\">Spring Security \u2013 Login Form Example<\/a><\/h4>\n<p>The scope of this tutorial is to:<\/p>\n<ul>\n<li>Only authorized user should be able to access edit employee screen.<\/li>\n<li>Unauthorized users should be presented with login screen.<\/li>\n<li>Successful credentials should forward to edit employee screen.<\/li>\n<li>Unsuccessful credentials should forward to access denied screen.<\/li>\n<li>There should be a link for logout of the application.<\/li>\n<\/ul>\n<h4><a href=\"https:\/\/howtodoinjava.com\/spring-security\/inmemory-jdbc-userdetails-service\/\">Spring Security \u2013 JDBC User Service Example<\/a><\/h4>\n<p>Example of <code>&lt;jdbc-user-service\/&gt;<\/code> used to fetch username and password from database to authenticate user into the system.<\/p>\n<h4><a href=\"https:\/\/howtodoinjava.com\/spring-security\/http-basic-authentication-example\/\">Spring Security \u2013 HTTP Basic Authentication Example<\/a><\/h4>\n<p>Example of <code>&lt;http-basic\/&gt;<\/code> used to enforce the user to authenticate any of webpage or any other resource in your application with basic http authentication.<\/p>\n<h4><a href=\"https:\/\/howtodoinjava.com\/spring-security\/custom-userdetailsservice-example-for-spring-3-security\/\">Spring Security \u2013 Custom UserDetailsService Example<\/a><\/h4>\n<p>Learn to extend and use <code><a href=\"http:\/\/static.springsource.org\/spring-security\/site\/docs\/3.0.x\/apidocs\/org\/springframework\/security\/core\/userdetails\/UserDetailsService.html\">UserDetailsService<\/a><\/code> interface which is used in order to lookup the username, password and granted authorities for any given user. <\/p>\n<h4><a href=\"https:\/\/howtodoinjava.com\/spring-security\/spring-3-method-level-security-example-using-preauthorize-and-secured\/\">Spring Security \u2013 Method Level Security Example \u2013 @PreAuthorize and @Secured<\/a><\/h4>\n<p>Learn to implement method level security in spring applications.<\/p>\n<h4><a href=\"https:\/\/howtodoinjava.com\/spring-security\/spring-security-at-view-layer-using-jsp-taglibs\/\">Spring Security \u2013 View Layer Security using JSP Taglibs<\/a><\/h4>\n<p>Learn to add security in view layer. It is mostly needed when we want to hide certain links or buttons based on user\u2019s role so that he will not be able to access that functionality.<\/p>\n<h4><a href=\"https:\/\/howtodoinjava.com\/junit\/how-to-unit-test-spring-security-authentication-with-junit\/\">Spring Security \u2013 Unit testing Spring Security Authentication<\/a><\/h4>\n<p>Learn the way to test spring authentication techniques to foolproof the system from outer attacks.<\/p>\n<h4><a href=\"https:\/\/howtodoinjava.com\/spring-security\/spring-3-security-siteminder-pre-authentication-example\/\">Spring Security \u2013 Siteminder Pre-authentication Example<\/a><\/h4>\n<p>Learn to use spring security when user has been pre-authenticated in any other application and get into your web application using siteminder. <\/p>\n<h4><a href=\"https:\/\/howtodoinjava.com\/spring-security\/xml-config-based-method-level-spring-security-using-protect-pointcut\/\">Spring Security \u2013 Method Level Security with protect-pointcut<\/a><\/h4>\n<p>Learn to use XML based security configuration.<\/p>\n<p>Reference(s):<\/p>\n<p><a href=\"https:\/\/docs.spring.io\/spring-security\/site\/docs\/5.5.2\/reference\/html5\/\" target=\"_blank\" rel=\"noopener noreferrer\">Spring Security Reference<\/a><\/p>\n","protected":false},"excerpt":{"rendered":"<p>Spring Security is a framework that focuses on providing both authentication and authorization to Java EE-based enterprise software applications. Spring security is the de-facto standard for securing Spring-based applications. Spring Security requires a Java 8 or higher Runtime Environment. 1. Adding Spring Security 1.1. Maven To include spring security into the application, include below dependency: &#8230; <a title=\"Spring Security Tutorial\" class=\"read-more\" href=\"https:\/\/howtodoinjava.com\/spring-security-tutorial\/\" aria-label=\"More on Spring Security Tutorial\">Read more<\/a><\/p>\n","protected":false},"author":2,"featured_media":7616,"parent":0,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"uagb_featured_image_src":{"full":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2016\/07\/Spring-Security-logo.png",300,225,false],"thumbnail":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2016\/07\/Spring-Security-logo-150x150.png",150,150,true],"medium":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2016\/07\/Spring-Security-logo-300x225.png",300,225,true],"medium_large":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2016\/07\/Spring-Security-logo.png",300,225,false],"large":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2016\/07\/Spring-Security-logo.png",300,225,false],"1536x1536":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2016\/07\/Spring-Security-logo.png",300,225,false],"2048x2048":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2016\/07\/Spring-Security-logo.png",300,225,false],"yarpp-thumbnail":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2016\/07\/Spring-Security-logo.png",120,90,false]},"uagb_author_info":{"display_name":"Lokesh Gupta","author_link":"https:\/\/howtodoinjava.com\/author\/lokeshgupta1981\/"},"uagb_comment_info":1,"uagb_excerpt":"Spring Security is a framework that focuses on providing both authentication and authorization to Java EE-based enterprise software applications. Spring security is the de-facto standard for securing Spring-based applications. Spring Security requires a Java 8 or higher Runtime Environment. 1. Adding Spring Security 1.1. Maven To include spring security into the application, include below dependency:&hellip;","_links":{"self":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/pages\/7615"}],"collection":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/comments?post=7615"}],"version-history":[{"count":0,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/pages\/7615\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/media\/7616"}],"wp:attachment":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/media?parent=7615"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}