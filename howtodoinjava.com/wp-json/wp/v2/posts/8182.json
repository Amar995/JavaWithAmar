{"id":8182,"date":"2017-06-06T22:54:23","date_gmt":"2017-06-06T17:24:23","guid":{"rendered":"http:\/\/howtodoinjava.com\/?p=8182"},"modified":"2020-12-26T00:37:15","modified_gmt":"2020-12-25T19:07:15","slug":"lambda-method-references-example","status":"publish","type":"post","link":"https:\/\/howtodoinjava.com\/java8\/lambda-method-references-example\/","title":{"rendered":"Java 8 method reference example"},"content":{"rendered":"<p>In <a href=\"\/\/howtodoinjava.com\/java-8-tutorial\/\">Java 8<\/a>, we can refer a method from class or object using <code><strong>class::methodName<\/strong><\/code> type syntax. Let&#8217;s learn about different types of available <strong>method references in java 8<\/strong>.<\/p>\n<pre>Table of Contents\r\n\r\n1. <a href=\"#method-references\">Types of Method References<\/a>\r\n2. <a href=\"#static-methods\">Reference to static method - Class::staticMethodName<\/a>\r\n3. <a href=\"#instance-method\">Reference to instance method from instance - ClassInstance::instanceMethodName<\/a>\r\n4. <a href=\"#class-method\">Reference to instance method from class type - Class::instanceMethodName<\/a>\r\n5. <a href=\"#constructor\">Reference to constructor - Class::new<\/a><\/pre>\n<p><a id=\"method-references\"><\/a><\/p>\n<h2>1. Types of method references<\/h2>\n<p>Java 8 allows four types of method references.<\/p>\n<table class=\"mtr-table mtr-tr-th\">\n<tr>\n<th data-mtr-content=\"Method Reference\" class=\"mtr-th-tag\"><div class=\"mtr-cell-content\">Method Reference<\/div><\/th>\n<th data-mtr-content=\"Description\" class=\"mtr-th-tag\"><div class=\"mtr-cell-content\">Description<\/div><\/th>\n<th data-mtr-content=\"Method reference example\" class=\"mtr-th-tag\"><div class=\"mtr-cell-content\">Method reference example<\/div><\/th>\n<\/tr>\n<tr>\n<td data-mtr-content=\"Method Reference\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\">Reference to <strong>static method<\/strong><\/div><\/td>\n<td data-mtr-content=\"Description\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\">Used to refer static methods from a class<\/div><\/td>\n<td data-mtr-content=\"Method reference example\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\"><code>Math::max<\/code> equivalent to <code>Math.max(x,y)<\/code><\/div><\/td>\n<\/tr>\n<tr>\n<td data-mtr-content=\"Method Reference\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\">Reference to <strong>instance method from instance<\/strong><\/div><\/td>\n<td data-mtr-content=\"Description\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\">Refer to an instance method using a reference to the supplied object<\/div><\/td>\n<td data-mtr-content=\"Method reference example\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\"><code>System.out::println<\/code> equivalent to <code>System.out.println(x)<\/code><\/div><\/td>\n<\/tr>\n<tr>\n<td data-mtr-content=\"Method Reference\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\">Reference to <strong>instance method from class type<\/strong><\/div><\/td>\n<td data-mtr-content=\"Description\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\">Invoke the instance method on a reference to an object supplied by the context<\/div><\/td>\n<td data-mtr-content=\"Method reference example\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\"><code>String::length<\/code> equivalent to <code>str.length()<\/code><\/div><\/td>\n<\/tr>\n<tr>\n<td data-mtr-content=\"Method Reference\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\">Reference to <strong>constructor<\/strong><\/div><\/td>\n<td data-mtr-content=\"Description\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\">Reference to a constructor<\/div><\/td>\n<td data-mtr-content=\"Method reference example\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\"><code>ArrayList::new<\/code> equivalent to <code>new ArrayList()<\/code><\/div><\/td>\n<\/tr>\n<\/table>\n<p><a id=\"static-methods\"><\/a><\/p>\n<h2>2. Method reference to static method &#8211; Class::staticMethodName<\/h2>\n<p>An example to use <code>Math.max()<\/code> which is static method.<\/p>\n<pre class=\"brush: java; highlight: [3]; title: ; notranslate\" title=\"\">\r\nList&lt;Integer&gt; integers = Arrays.asList(1,12,433,5);\r\n\t\t\r\nOptional&lt;Integer&gt; max = integers.stream().reduce( Math::max ); \r\n\r\nmax.ifPresent(value -&gt; System.out.println(value)); \r\n<\/pre>\n<p>Output:<\/p>\n<pre>433<\/pre>\n<p><a id=\"instance-method\"><\/a><\/p>\n<h2>3. Method reference to instance method from instance &#8211; ClassInstance::instanceMethodName<\/h2>\n<p>In above example, we use <code>System.out.println(value)<\/code> to print the max value found. We can use <code>System.out::println<\/code> to print the value.<\/p>\n<pre class=\"brush: java; highlight: [5]; title: ; notranslate\" title=\"\">\r\nList&lt;Integer&gt; integers = Arrays.asList(1,12,433,5);\r\n\t\t\r\nOptional&lt;Integer&gt; max = integers.stream().reduce( Math::max ); \r\n\r\nmax.ifPresent( System.out::println ); \r\n<\/pre>\n<p>Output:<\/p>\n<pre>433<\/pre>\n<p><a id=\"class-method\"><\/a><\/p>\n<h2>4. Method reference to instance method from class type &#8211; Class::instanceMethodName<\/h2>\n<p>In this example, s1.compareTo(s2) is referred as <code>String::compareTo<\/code>.<\/p>\n<pre class=\"brush: java; title: ; notranslate\" title=\"\">\r\nList&lt;String&gt; strings = Arrays\r\n\t\t.asList(&quot;how&quot;, &quot;to&quot;, &quot;do&quot;, &quot;in&quot;, &quot;java&quot;, &quot;dot&quot;, &quot;com&quot;);\r\n\r\nList&lt;String&gt; sorted = strings\r\n\t\t.stream()\r\n\t\t.sorted((s1, s2) -&gt; s1.compareTo(s2))\r\n\t\t.collect(Collectors.toList());\r\n\r\nSystem.out.println(sorted);\r\n\r\nList&lt;String&gt; sortedAlt = strings\r\n\t\t.stream()\r\n\t\t.sorted(String::compareTo)\r\n\t\t.collect(Collectors.toList());\r\n\r\nSystem.out.println(sortedAlt);\r\n<\/pre>\n<p>Output:<\/p>\n<pre>[com, do, dot, how, in, java, to]\r\n[com, do, dot, how, in, java, to]<\/pre>\n<p><a id=\"constructor\"><\/a><\/p>\n<h2>5. Reference to constructor &#8211; Class::new<\/h2>\n<p>The first method can be updated to create a list of integers from 1 to 100. Using <a href=\"https:\/\/howtodoinjava.com\/java8\/lambda-expressions\/\">lambda expression<\/a> is rather easy. To create a new instance of <code>ArrayList<\/code>, we have use <code>ArrayList::new<\/code>.<\/p>\n<pre class=\"brush: java; highlight: [4]; title: ; notranslate\" title=\"\">\r\nList&lt;Integer&gt; integers = IntStream\r\n\t\t\t\t.range(1, 100)\r\n\t\t\t\t.boxed()\r\n\t\t\t\t.collect(Collectors.toCollection( ArrayList::new ));\r\n\r\nOptional&lt;Integer&gt; max = integers.stream().reduce(Math::max); \r\n\r\nmax.ifPresent(System.out::println); \r\n<\/pre>\n<p>Output:<\/p>\n<pre>99<\/pre>\n<p>That&#8217;s 4 type of <strong>method references in java 8<\/strong> lambda enhancements.<\/p>\n<p>Happy Learning !!<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Java 8 allows to refer method from class or object using class::methodName syntax. Learn about different types of available method references in java 8.<\/p>\n","protected":false},"author":2,"featured_media":8183,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"categories":[18],"tags":[1409,576],"uagb_featured_image_src":{"full":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2017\/06\/Java-8-Method-References.png",833,410,false],"thumbnail":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2017\/06\/Java-8-Method-References-150x150.png",150,150,true],"medium":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2017\/06\/Java-8-Method-References-300x148.png",300,148,true],"medium_large":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2017\/06\/Java-8-Method-References-768x378.png",768,378,true],"large":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2017\/06\/Java-8-Method-References.png",833,410,false],"1536x1536":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2017\/06\/Java-8-Method-References.png",833,410,false],"2048x2048":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2017\/06\/Java-8-Method-References.png",833,410,false],"yarpp-thumbnail":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2017\/06\/Java-8-Method-References.png",120,59,false]},"uagb_author_info":{"display_name":"Lokesh Gupta","author_link":"https:\/\/howtodoinjava.com\/author\/lokeshgupta1981\/"},"uagb_comment_info":6,"uagb_excerpt":"Java 8 allows to refer method from class or object using class::methodName syntax. Learn about different types of available method references in java 8.","_links":{"self":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts\/8182"}],"collection":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/comments?post=8182"}],"version-history":[{"count":0,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts\/8182\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/media\/8183"}],"wp:attachment":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/media?parent=8182"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/categories?post=8182"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/tags?post=8182"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}