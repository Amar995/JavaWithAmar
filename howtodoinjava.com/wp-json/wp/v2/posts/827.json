{"id":827,"date":"2013-03-06T00:43:59","date_gmt":"2013-03-05T19:13:59","guid":{"rendered":"http:\/\/howtodoinjava.com\/?p=827"},"modified":"2022-01-25T02:02:13","modified_gmt":"2022-01-24T20:32:13","slug":"java-is-pass-by-value-lets-see-how","status":"publish","type":"post","link":"https:\/\/howtodoinjava.com\/java\/basics\/java-is-pass-by-value-lets-see-how\/","title":{"rendered":"Java Pass-by-Value vs. Pass-by-Reference"},"content":{"rendered":"<p>There has been a good amount of debate on whether &#8220;<em>java is pass by value or pass by reference<\/em>?&#8221;. Well, lets conclude it last time, <strong>Java is pass by value and not pass by reference<\/strong>. If it had been pass by reference, we should have been able to C like swapping of objects, but we can&#8217;t do that in java. We know it already, right?<\/p>\n<p>When you pass an instance to a method, its memory address are copied bit by bit to new reference variable, thus both pointing to same instance. But if you change the reference inside method, original reference will not get change. If it was pass by reference, then it would have got changed also.<\/p>\n<p>To prove it, lets see how memory allocations happen in run time. It should solve the slightest doubts, if any. I am using following program for demonstration of the concept.<\/p>\n<pre class=\"brush: java; title: ; notranslate\" title=\"\">\npublic class Foo\n{\n\tprivate String attribute;\n\n\tpublic Foo (String a){\n\t\tthis.attribute = a;\n\t}\n\tpublic String getAttribute() {\n\t\treturn attribute;\n\t}\n\tpublic void setAttribute(String attribute) {\n\t\tthis.attribute = attribute;\n\t}\n}\n\npublic class Main\n{\n     public static void main(String[] args){\n          Foo f = new Foo(&quot;f&quot;);\n          changeReference(f); \/\/ It won't change the reference!\n          modifyReference(f); \/\/ It will change the object that the reference variable &quot;f&quot; refers to!\n     }\n     public static void changeReference(Foo a) {\n          Foo b = new Foo(&quot;b&quot;);\n          a = b;\n     }\n     public static void modifyReference(Foo c) {\n          c.setAttribute(&quot;c&quot;);\n     }\n}\n<\/pre>\n<p style=\"text-align:left;\">Lets see what happen on runtime step by step :<\/p>\n<p><strong>1) Foo f = new Foo(&#8220;f&#8221;);<\/strong><\/p>\n<p>This statement will create an instance of class Foo, with &#8216;attribute&#8217; initialized to &#8216;f&#8217;. The reference to this created instance is assigned to variable f;<\/p>\n<p><img alt='1-8158113' class=\"aligncenter size-full wp-image-829\" alt=\"innstance creation\" src='https:\/\/howtodoinjava.com\/wp-content\/uploads\/2013\/03\/1-8158113.png' width=\"185\" height=\"250\" \/><\/p>\n<p><strong>2) public static void changeReference(Foo a)<\/strong><\/p>\n<p>When this executes then a reference of type Foo with a name a is declared and it&#8217;s initially assigned to null.<\/p>\n<p><img alt='2-7952427' class=\"aligncenter size-full wp-image-830\" alt=\"Null reference\" src='https:\/\/howtodoinjava.com\/wp-content\/uploads\/2013\/03\/2-7952427.png' width=\"366\" height=\"282\" \/><\/p>\n<p><strong>3) changeReference(f);<\/strong><\/p>\n<p>As you call the method changeReference, the reference a will be assigned to the object which is passed as an argument.<\/p>\n<p><img alt='3-7934433' class=\"aligncenter size-full wp-image-831\" alt=\"reference assignment\" src='https:\/\/howtodoinjava.com\/wp-content\/uploads\/2013\/03\/3-7934433.png' width=\"369\" height=\"285\" \/><\/p>\n<p><strong>4) Foo b = new Foo(&#8220;b&#8221;);<\/strong> inside first method<\/p>\n<p>This will do exactly the same as in first step, and will create a new instance of Foo, and assign it to b;<\/p>\n<p><img alt='4-7475542' class=\"aligncenter size-full wp-image-832\" alt=\"new instance\" src='https:\/\/howtodoinjava.com\/wp-content\/uploads\/2013\/03\/4-7475542.png' width=\"582\" height=\"295\" \/><\/p>\n<p><strong>5) a = b;<\/strong><\/p>\n<p>This is the important point. Here, we have three reference variables and when statement executes, a and b will point to same instance created inside the method. Note: f is unchanged and it is continually pointing to instance, it was pointing originally. NO CHANGE !!<\/p>\n<p><img alt='5-7576774' class=\"aligncenter size-full wp-image-833\" alt=\"assignment\" src='https:\/\/howtodoinjava.com\/wp-content\/uploads\/2013\/03\/5-7576774.png' width=\"590\" height=\"305\" \/><\/p>\n<p><strong>6) modifyReference(Foo c);<\/strong><\/p>\n<p>Now when this statement executed a reference, c is created and assigned to the object with attribute &#8220;f&#8221;.<\/p>\n<p><img alt='6-9650208' class=\"aligncenter size-full wp-image-834\" alt=\"new reference\" src='https:\/\/howtodoinjava.com\/wp-content\/uploads\/2013\/03\/6-9650208.png' width=\"374\" height=\"283\" \/><\/p>\n<p><strong>7) c.setAttribute(&#8220;c&#8221;);<\/strong><\/p>\n<p>This will change the attribute of the object that reference c points to it, and its same object that reference f points to it.<\/p>\n<p><img alt='8-1270952' class=\"size-full wp-image-835 aligncenter\" alt=\"modify reference\" src='https:\/\/howtodoinjava.com\/wp-content\/uploads\/2013\/03\/8-1270952.png' width=\"372\" height=\"282\" \/><\/p>\n<p>I hope that this explanation was enough clear to make your understanding better, if it was not already.<\/p>\n<p>Happy Learning !!<\/p>\n","protected":false},"excerpt":{"rendered":"<p>There has been a good amount of debate on whether &#8220;java is pass by value or pass by reference?&#8221;. Well, lets conclude it last time, Java is pass by value and not pass by reference. If it had been pass by reference, we should have been able to C like swapping of objects, but we &#8230; <a title=\"Java Pass-by-Value vs. Pass-by-Reference\" class=\"read-more\" href=\"https:\/\/howtodoinjava.com\/java\/basics\/java-is-pass-by-value-lets-see-how\/\" aria-label=\"More on Java Pass-by-Value vs. Pass-by-Reference\">Read more<\/a><\/p>\n","protected":false},"author":2,"featured_media":832,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"categories":[753],"tags":[4],"uagb_featured_image_src":{"full":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2013\/03\/41.png",582,295,false],"thumbnail":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2013\/03\/41-150x150.png",150,150,true],"medium":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2013\/03\/41-300x152.png",300,152,true],"medium_large":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2013\/03\/41.png",582,295,false],"large":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2013\/03\/41.png",582,295,false],"1536x1536":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2013\/03\/41.png",582,295,false],"2048x2048":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2013\/03\/41.png",582,295,false],"yarpp-thumbnail":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2013\/03\/41.png",120,61,false]},"uagb_author_info":{"display_name":"Lokesh Gupta","author_link":"https:\/\/howtodoinjava.com\/author\/lokeshgupta1981\/"},"uagb_comment_info":13,"uagb_excerpt":"There has been a good amount of debate on whether &#8220;java is pass by value or pass by reference?&#8221;. Well, lets conclude it last time, Java is pass by value and not pass by reference. If it had been pass by reference, we should have been able to C like swapping of objects, but we&hellip;","_links":{"self":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts\/827"}],"collection":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/comments?post=827"}],"version-history":[{"count":0,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts\/827\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/media\/832"}],"wp:attachment":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/media?parent=827"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/categories?post=827"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/tags?post=827"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}