{"id":2945,"date":"2013-08-24T11:36:27","date_gmt":"2013-08-24T06:06:27","guid":{"rendered":"http:\/\/howtodoinjava.com\/?p=2945"},"modified":"2020-12-26T00:49:22","modified_gmt":"2020-12-25T19:19:22","slug":"javascript-correct-way-to-define-global-variables","status":"publish","type":"post","link":"https:\/\/howtodoinjava.com\/javascript\/javascript-correct-way-to-define-global-variables\/","title":{"rendered":"JavaScript: Correct way to define global variables"},"content":{"rendered":"<p>We know that what <a title=\"Global variable\" href=\"https:\/\/en.wikipedia.org\/wiki\/Global_variable\"><strong>global variables<\/strong><\/a> or constants are, these are fields which are accessible application wide. In java, it is done usually done using defining &#8220;<strong>public static<\/strong>&#8221; fields. Here by adding final keyword, we can change the global variable to <strong>global constant<\/strong>. So easy, right?<\/p>\n<p>But what about javascript? These scripting languages don&#8217;t have these access modifiers etc., so what are our options?<\/p>\n<p style=\"text-align: center;\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-2946\" title=\"javascript jquery\" alt=\"javascript jquery\" src=\"https:\/\/howtodoinjava.com\/wp-content\/uploads\/javascript_jquery.jpg\" width=\"272\" height=\"185\" \/><\/p>\n<p>I faced a similar situation in my regular work hours and came to know that defining global variable in traditional javascript way can break in production code. <strong>Traditional way<\/strong> is:<\/p>\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">\n\nvar iAmGlobal = \"some val\"; \/\/Global variable declaration\n\n\/\/Any place in other part of code\n\nfunction doSomething()\n{\n    \/\/iAmGlobal = \"changed value\";\n    alert(iAmGlobal); \/\/I am accessible here too !!\n}\n\n<\/pre>\n<p>These type are declaration are in practice from long time and for some less fortunate mates, it result in famous&nbsp;<strong>&#8220;Object doesn&#8217;t support this property or method&#8221;<\/strong> error in java script. If you remember there is an <strong>IE bug with &#8220;var a = foo&#8221; only declaring a global for file scope<\/strong>. This is an issue with IE&#8217;s notorious broken interpreter.<\/p>\n<p>So, what&#8217;s correct way to declare global variable in javascript then?<\/p>\n<h3><strong>Correct way to declare global variable in JavaScript<\/strong><\/h3>\n<p>The proper way is to use window object. And use the syntax like this:<\/p>\n<pre class=\"brush: jscript; title: ; notranslate\" title=\"\">\n\nvar window.iAmGlobal = \"some val\"; \/\/Global variable declaration with window.\n\n\/\/Any place in other part of code\n\nfunction doSomething()\n{\n    alert(window.iAmGlobal); \/\/I am accessible here too !!\n    \/\/OR\n    alert(iAmGlobal); \/\/I am accessible here too !!\n}\n\n<\/pre>\n<p>By defining globals this way, you will make JavaScript more robust and reliable.<\/p>\n<h3><strong>Important points:<\/strong><\/h3>\n<ol>\n<li>Define global variables with window keyword in form of &#8220;window.VAR_NAME&#8221;<\/li>\n<li>You can access the variable with &#8220;window.VAR_NAME&#8221; or directly &#8220;VAR_NAME&#8221;<\/li>\n<li>Do not use other variables with same name otherwise it may cause unwanted results<\/li>\n<\/ol>\n<p>That&#8217;s all folks on this topic.<\/p>\n<p><strong>Further reading<\/strong>: <a href=\"https:\/\/stackoverflow.com\/questions\/4862193\/difference-between-variable-declaration-syntaxes-in-javascript-including-global\">http:\/\/stackoverflow.com\/questions\/4862193\/javascript-global-variables<\/a><\/p>\n<p><strong>Happy learning !!<\/strong><\/p>\n","protected":false},"excerpt":{"rendered":"<p>We know that what global variables or constants are, these are fields which are accessible application wide. In java, it is done usually done using defining &#8220;public static&#8221; fields. Here by adding final keyword, we can change the global variable to global constant. So easy, right? But what about javascript? These scripting languages don&#8217;t have &#8230; <a title=\"JavaScript: Correct way to define global variables\" class=\"read-more\" href=\"https:\/\/howtodoinjava.com\/javascript\/javascript-correct-way-to-define-global-variables\/\" aria-label=\"More on JavaScript: Correct way to define global variables\">Read more<\/a><\/p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[857],"tags":[301],"uagb_featured_image_src":{"full":false,"thumbnail":false,"medium":false,"medium_large":false,"large":false,"1536x1536":false,"2048x2048":false,"yarpp-thumbnail":false},"uagb_author_info":{"display_name":"Lokesh Gupta","author_link":"https:\/\/howtodoinjava.com\/author\/lokeshgupta1981\/"},"uagb_comment_info":16,"uagb_excerpt":"We know that what global variables or constants are, these are fields which are accessible application wide. In java, it is done usually done using defining &#8220;public static&#8221; fields. Here by adding final keyword, we can change the global variable to global constant. So easy, right? But what about javascript? These scripting languages don&#8217;t have&hellip;","_links":{"self":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts\/2945"}],"collection":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/comments?post=2945"}],"version-history":[{"count":0,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts\/2945\/revisions"}],"wp:attachment":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/media?parent=2945"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/categories?post=2945"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/tags?post=2945"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}