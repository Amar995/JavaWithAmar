{"id":10674,"date":"2018-06-24T13:08:27","date_gmt":"2018-06-24T07:38:27","guid":{"rendered":"https:\/\/howtodoinjava.com\/?p=10674"},"modified":"2021-09-22T11:49:10","modified_gmt":"2021-09-22T06:19:10","slug":"typescript-tutorial","status":"publish","type":"post","link":"https:\/\/howtodoinjava.com\/typescript\/typescript-tutorial\/","title":{"rendered":"TypeScript Tutorial"},"content":{"rendered":"<p>TypeScript is an open-source programming language that is developed and maintained by Microsoft in 2012. TypeScript brings &#8216;types&#8217; (or datatypes) to JavaScript.<\/p>\n<p>Generally, types check the validity of the supplied values, before they are stored or manipulated by the program. This ensures that the code behaves as expected and prevents us from accidentally corrupting the program.  The Type system helps in bringing JavaScript closer to other strongly typed languages such as <code>Java<\/code> and <code>C#<\/code>.<\/p>\n<pre>Table of Contents\n\n1. <a href=\"#typescript-javascript\">TypeScript vs JavaScript<\/a>\n2. <a href=\"#compiler\">TypeScript Compiler<\/a>\n3. <a href=\"#install-ts\">Install TypeScript<\/a>\n4. <a href=\"#run-ts\">Run TypeScript<\/a><\/pre>\n<p><a id=\"typescript-javascript\"><\/a><\/p>\n<h2>1. TypeScript vs JavaScript<\/h2>\n<figure id=\"attachment_10675\" aria-describedby=\"caption-attachment-10675\" style=\"width: 408px\" class=\"wp-caption aligncenter\"><img loading=\"lazy\" src=\"https:\/\/howtodoinjava.com\/wp-content\/uploads\/2018\/06\/TypeScript-vs-JavaScript.png\" alt=\"TypeScript vs JavaScript\" width=\"418\" height=\"366\" class=\"size-full wp-image-10675\" \/><figcaption id=\"caption-attachment-10675\" class=\"wp-caption-text\">TypeScript vs JavaScript<\/figcaption><\/figure>\n<ol>\n<li>TypeScript is the <strong>ES6 version of JavaScript + a few other TypeScript only features<\/strong> which Angular needs in order to work.<\/li>\n<li><strong>TypeScript is superset of JavaScript<\/strong>. It scales JavaScript with datatype support.<\/li>\n<li>Existing JavaScript programs are also valid TypeScript programs.<\/li>\n<li>TypeScript supports definition files that can contain type information of existing JavaScript libraries.<\/li>\n<li>TypeScript is only for development. To run in browser, it must be converted to either ES6 or ES5 version of JavaScript.<\/li>\n<\/ol>\n<p><a id=\"compiler\"><\/a><\/p>\n<h2>2. TypeScript Compiler<\/h2>\n<p>Browsers don&#8217;t support TypeScript. So program sourcecode written in TypeScript must be re-written in supported JavaScript sourcecode. For this, TypeScript distribution comes with TypeScript compiler, named <code>tsc<\/code>.<\/p>\n<p>The current version of the compiler supports ES 5 by default. TypeScript can compile the sourcecode to any module pattern &#8211; <code><a href=\"https:\/\/en.wikipedia.org\/wiki\/Asynchronous_module_definition\">AMD<\/a><\/code>, <code><a href=\"https:\/\/en.wikipedia.org\/wiki\/CommonJS\">CommonJS<\/a><\/code>, <code>ES 6<\/code>, <code>SystemJS<\/code> etc.<\/p>\n<p>As with any <code>npm<\/code> package, you can install it locally or globally, or both, and compile the TS files by running <code>tsc<\/code> on the command line.<\/p>\n<pre class=\"brush: jscript; title: tsc 1=example; notranslate\" title=\"tsc 1=example\">\r\n$ tsc helloworld.ts \t\/\/It compile the file into helloworld.js\r\n<\/pre>\n<h4>2.1. TypeScript Compiler Configuration<\/h4>\n<p>TypeScipt compiler options are given in <code>tsconfig.js<\/code>. A sample config file looks like this:<\/p>\n<pre class=\"brush: jscript; highlight: [11]; title: tsconfig.json; notranslate\" title=\"tsconfig.json\">\r\n{\r\n  &quot;compileOnSave&quot;: false,\r\n  &quot;compilerOptions&quot;: {\r\n    &quot;baseUrl&quot;: &quot;.\/&quot;,\r\n    &quot;outDir&quot;: &quot;.\/dist\/out-tsc&quot;,\r\n    &quot;sourceMap&quot;: true,\r\n    &quot;declaration&quot;: false,\r\n    &quot;moduleResolution&quot;: &quot;node&quot;,\r\n    &quot;emitDecoratorMetadata&quot;: true,\r\n    &quot;experimentalDecorators&quot;: true,\r\n    &quot;target&quot;: &quot;es5&quot;,\r\n    &quot;typeRoots&quot;: [\r\n      &quot;node_modules\/@types&quot;\r\n    ],\r\n    &quot;lib&quot;: [\r\n      &quot;es2017&quot;,\r\n      &quot;dom&quot;\r\n    ]\r\n  }\r\n}\r\n<\/pre>\n<p><a id=\"install-ts\"><\/a><\/p>\n<h2>3. Install TypeScript<\/h2>\n<p>As TypeScript is only for development purposes, and not used in runtime, It <strong>should be installed as dev dependency<\/strong>.<\/p>\n<pre class=\"brush: jscript; title: install language=typescript; notranslate\" title=\"install language=typescript\">\r\n$ npm install typescript --save-dev   \/\/As dev dependency\r\n\r\n$ npm install typescript -g          \/\/Install as a global module\r\n\r\n$ npm install typescript@latest -g   \/\/Install latest if you have the older version\r\n<\/pre>\n<p><a id=\"run-ts\"><\/a><\/p>\n<h2>4. Run TypeScript<\/h2>\n<p>Create a file <code>helloworld.ts<\/code> in workspace. Add below console log statement in file.<\/p>\n<pre class=\"brush: jscript; title: helloworld.ts; notranslate\" title=\"helloworld.ts\">\r\nconsole.log(&quot;Welcome to TypeScript !!&quot;);\r\n<\/pre>\n<p>To <strong>compile from typescript to javascript<\/strong>, use command <code>tsc filename<\/code>.<\/p>\n<pre class=\"brush: jscript; title: Compile 1=javascript; notranslate\" title=\"Compile 1=javascript\">\r\n$ tsc helloworld.ts \t\/\/Generates file helloworld.js\r\n<\/pre>\n<p>To execute file, run using <code>node<\/code> command.<\/p>\n<pre class=\"brush: jscript; title: Compile 1=javascript; notranslate\" title=\"Compile 1=javascript\">\r\n$ node helloworld.ts \t\/\/Output &quot;Welcome to TypeScript !!&quot;\r\n<\/pre>\n<figure id=\"attachment_10678\" aria-describedby=\"caption-attachment-10678\" style=\"width: 443px\" class=\"wp-caption aligncenter\"><img loading=\"lazy\" src=\"https:\/\/howtodoinjava.com\/wp-content\/uploads\/2018\/06\/Run-TypeScript-from-Console.png\" alt=\"Run TypeScript from Console\" width=\"453\" height=\"207\" class=\"size-full wp-image-10678\" \/><figcaption id=\"caption-attachment-10678\" class=\"wp-caption-text\">Run TypeScript from Console<\/figcaption><\/figure>\n<p>That&#8217;s all for <strong>introduction to typescript<\/strong>.<\/p>\n<p>Happy Learning !!<\/p>\n","protected":false},"excerpt":{"rendered":"<p>TypeScript is an open-source programming language that is developed and maintained by Microsoft in 2012. TypeScript brings &#8216;types&#8217; (or datatypes) to JavaScript. Generally, types check the validity of the supplied values, before they are stored or manipulated by the program. This ensures that the code behaves as expected and prevents us from accidentally corrupting the &#8230; <a title=\"TypeScript Tutorial\" class=\"read-more\" href=\"https:\/\/howtodoinjava.com\/typescript\/typescript-tutorial\/\" aria-label=\"More on TypeScript Tutorial\">Read more<\/a><\/p>\n","protected":false},"author":2,"featured_media":10675,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"categories":[1141],"tags":[1142],"uagb_featured_image_src":{"full":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2018\/06\/TypeScript-vs-JavaScript.png",418,366,false],"thumbnail":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2018\/06\/TypeScript-vs-JavaScript.png",150,131,false],"medium":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2018\/06\/TypeScript-vs-JavaScript.png",300,263,false],"medium_large":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2018\/06\/TypeScript-vs-JavaScript.png",418,366,false],"large":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2018\/06\/TypeScript-vs-JavaScript.png",418,366,false],"1536x1536":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2018\/06\/TypeScript-vs-JavaScript.png",418,366,false],"2048x2048":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2018\/06\/TypeScript-vs-JavaScript.png",418,366,false],"yarpp-thumbnail":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2018\/06\/TypeScript-vs-JavaScript.png",120,105,false]},"uagb_author_info":{"display_name":"Lokesh Gupta","author_link":"https:\/\/howtodoinjava.com\/author\/lokeshgupta1981\/"},"uagb_comment_info":0,"uagb_excerpt":"TypeScript is an open-source programming language that is developed and maintained by Microsoft in 2012. TypeScript brings &#8216;types&#8217; (or datatypes) to JavaScript. Generally, types check the validity of the supplied values, before they are stored or manipulated by the program. This ensures that the code behaves as expected and prevents us from accidentally corrupting the&hellip;","_links":{"self":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts\/10674"}],"collection":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/comments?post=10674"}],"version-history":[{"count":0,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts\/10674\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/media\/10675"}],"wp:attachment":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/media?parent=10674"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/categories?post=10674"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/tags?post=10674"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}