{"id":4452,"date":"2015-01-22T09:43:24","date_gmt":"2015-01-22T09:43:24","guid":{"rendered":"http:\/\/howtodoinjava.com\/?p=4452"},"modified":"2022-04-21T18:03:38","modified_gmt":"2022-04-21T12:33:38","slug":"how-to-copy-directories-in-java","status":"publish","type":"post","link":"https:\/\/howtodoinjava.com\/java\/io\/how-to-copy-directories-in-java\/","title":{"rendered":"Copying a Directory in Java"},"content":{"rendered":"\n<p>Learn to <strong>copy a directory into a new location<\/strong> in Java. We will see examples for copying only the directories, as well as, deep copying the directory (all sub-folders and all files).<\/p>\n\n\n\t\t\t\t<div class=\"wp-block-uagb-table-of-contents uagb-toc__align-left uagb-toc__columns-1   uagb-block-b5efc791 \" \n\t\t\t\t\tdata-scroll= \"1\"\n\t\t\t\t\tdata-offset= \"30\"\n\t\t\t\t\tdata-delay= \"800\"\n\t\t\t\t>\n\t\t\t\t<div class=\"uagb-toc__wrap\">\n\t\t\t\t\t<div class=\"uagb-toc__title-wrap\">\n\t\t\t\t\t\t<div class=\"uagb-toc__title\">\n\t\t\t\t\t\t\tTable Of Contents\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"uagb-toc__list-wrap\">\n\t\t\t\t\t\t<ol class=\"uagb-toc__list\"><li class=\"uagb-toc__list\"><a href=\"#1-using-apache-commons-ios-fileutils\">1. Using Apache Commons IO&#8217;s FileUtils<\/a><ul class=\"uagb-toc__list\"><li class=\"uagb-toc__list\"><a href=\"#11-fileutilscopydirectory\">1.1. FileUtils.copyDirectory()<\/a><li class=\"uagb-toc__list\"><a href=\"#12-filefilter-and-iofilefilter\">1.2 FileFilter and IOFileFilter<\/a><li class=\"uagb-toc__list\"><a href=\"#13-java-program-to-copy-only-the-directory-structure\">1.3. Java Program to Copy Only the Directory Structure<\/a><li class=\"uagb-toc__list\"><a href=\"#14-java-program-to-copy-subdirectories-and-only-text-files\">1.4. Java Program to Copy Subdirectories and only Text Files<\/a><li class=\"uagb-toc__list\"><a href=\"#15-java-program-to-copy-all-subdirectories-and-files\">1.5. Java Program to Copy All Subdirectories and Files<\/a><\/li><\/ul><\/li><li class=\"uagb-toc__list\"><a href=\"#2-copying-files-recursively-using-nio\">2. Copying Files Recursively using NIO<\/a><\/li><\/ul><\/ol>\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\n\n\n<h2>1. Using Apache Commons IO&#8217;s <em>FileUtils<\/em><\/h2>\n\n\n\n<h3>1.1. <em>FileUtils.copyDirectory()<\/em><\/h3>\n\n\n\n<p><a href=\"http:\/\/commons.apache.org\/proper\/commons-io\/javadocs\/api-release\/org\/apache\/commons\/io\/FileUtils.html\">FileUtils<\/a> class provides a clean way for copying files and directories. It provides <code>copyDirectory()<\/code> method.<\/p>\n\n\n\n<ul><li><code>copyDirectory()<\/code> copies the contents of the specified source directory to the specified destination directory.<\/li><li>The <strong>destination directory is created if it does not exist<\/strong>.<\/li><li>If the destination directory did exist, then this method <strong>merges the source with the destination<\/strong>.<\/li><\/ul>\n\n\n\n<p>The <em>copyDirectory()<\/em> is an overloaded method with the following parameters:<\/p>\n\n\n\n<ul><li><code>srcDir<\/code> : an existing directory to copy, must not be <em>null<\/em>.<\/li><li><code>destDir<\/code> : the new directory, must not be <em>null<\/em>.<\/li><li><code>filter<\/code> : the filter to apply, <strong><code>null<\/code> means copying all directories and files<\/strong>.<\/li><li><code>preserveFileDate<\/code> : <em>true<\/em> if the <em>last modified date<\/em> of the copy should be the same as the original.<\/li><\/ul>\n\n\n\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">copyDirectory(File srcDir, File destDir, boolean preserveFileDate)\n\ncopyDirectory(File srcDir, File destDir, FileFilter filter, boolean preserveFileDate)<\/code><\/pre>\n\n\n\n<h3>1.2 <em>FileFilter<\/em> and <em>IOFileFilter<\/em><\/h3>\n\n\n\n<p>The second version of the method helps in copying only a filtered list of files. For example, if we want to copy only log files from one directory to another directory, we can use the <a href=\"https:\/\/howtodoinjava.com\/java\/io\/java-filefilter-example\/\">FileFilter<\/a> class.<\/p>\n\n\n\n<p>We can also use the following <strong>builtin filters<\/strong> as per requirement:<\/p>\n\n\n\n<ul><li><code>DirectoryFileFilter.DIRECTORY<\/code> &#8211; it accepts files that are directories.<\/li><li><code>FileFileFilter.FILE<\/code> &#8211; it accepts files that are files (not directories).<\/li><\/ul>\n\n\n\n<p>Additionally, we can define our own <strong>custom filters<\/strong> as explained in <a href=\"https:\/\/howtodoinjava.com\/java\/io\/java-filefilter-example\/\">this article<\/a>.<\/p>\n\n\n\n<p>The <strong>IOFileFilter<\/strong> helps in building the complex filters by chaining them with <code>and()<\/code> and <code>or()<\/code> methods. For example, the given <em>complexFilter<\/em> will help in copying all files that are either directories or text files.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">IOFileFilter txtFileFilter = FileFilterUtils.suffixFileFilter(\".txt\");\n\nIOFileFilter complexFilter =\r\n        DirectoryFileFilter.DIRECTORY.or(txtFileFilter);<\/code><\/pre>\n\n\n\n<h3>1.3. Java Program to Copy Only the Directory Structure <\/h3>\n\n\n\n<p>Given Java program copies all the directories (and subdirectories) from the source location to the destination location. No file is copied at any level.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">File srcDir = new File(\"c:\\\\temp\");\nFile destDir = new File(\"c:\\\\tempNew\");\n\nFileUtils.copyDirectory(srcDir, destDir, DirectoryFileFilter.DIRECTORY, false);<\/code><\/pre>\n\n\n\n<h3>1.4. Java Program to Copy Subdirectories and only Text Files<\/h3>\n\n\n\n<p>Given Java program copies all the directories (and inner directories) from the source location to the destination location. It also searches and copies all the text files in any of the directories.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">IOFileFilter txtFileFilter = FileFilterUtils.suffixFileFilter(\".txt\");\n\nIOFileFilter complexFilter =\n    DirectoryFileFilter.DIRECTORY.or(txtFileFilter);\n\nFileUtils.copyDirectory(srcDir, destDir, complexFilter, true);<\/code><\/pre>\n\n\n\n<h3>1.5. Java Program to Copy All Subdirectories and Files<\/h3>\n\n\n\n<p>Do not include any filter if we want to deep copy all subdirectories and files.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">FileUtils.copyDirectory(srcDir, destDir, true);<\/code><\/pre>\n\n\n\n<h2>2. Copying Files Recursively using NIO<\/h2>\n\n\n\n<p>To <strong>deep copy a directory<\/strong> from one location to another with all its sub-folders and multiple files in them, Java does not provide a straightforward API.<\/p>\n\n\n\n<p>We need to use <code>java.nio.file.Files<\/code> class. Its methods <code>walkFileTree()<\/code> and <code>copy()<\/code> must be used together to build a solution for deep copying a directory in Java using native APIs.<\/p>\n\n\n\n<p>Java program for copying all the subdirectories and files  <code>c:\\temp<\/code> to a new location <code>c:\\tempNew<\/code>.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">File srcDir = new File(\"c:\\\\temp\");\nFile destDir = new File(\"c:\\\\tempNew\");\n\ncopyFolder(srcDir.toPath(), destDir.toPath());\n\n\/\/Copy methods\npublic static void copyFolder(Path src, Path dest) throws IOException {\n\ttry (Stream&lt;Path> stream = Files.walk(src)) {\n\t  stream.forEach(source -> copy(source, dest.resolve(src.relativize(source))));\n\t}\n}\n\nprivate static void copy(Path source, Path dest) {\n\ttry {\n\t  Files.copy(source, dest, StandardCopyOption.REPLACE_EXISTING);\n\t} catch (Exception e) {\n\t  throw new RuntimeException(e.getMessage(), e);\n\t}\n}<\/code><\/pre>\n\n\n\n<p>In the above Java program:<\/p>\n\n\n\n<ul><li>If the target directory exists, the system will throw <code>FileAlreadyExistsException<\/code>.<\/li><li><code>StandardCopyOption.REPLACE_EXISTING<\/code> will replace the file with the new file if a file already exists in the destination folder. If we do not use this option, the copy will fail if the target file exists.<\/li><\/ul>\n\n\n\n<p>Verify that files are correctly copied or not. Feel free to modify the code and use it the way you like.<\/p>\n\n\n\n<p>Happy Learning !!<\/p>\n\n\n\n<blockquote class=\"wp-block-quote is-style-default download\"><p><a href=\"https:\/\/github.com\/lokeshgupta1981\/Core-Java\/tree\/master\/src\/main\/java\/com\/howtodoinjava\/io\" target=\"_blank\" rel=\"noreferrer noopener\">Source Code on Github<\/a><\/p><\/blockquote>\n","protected":false},"excerpt":{"rendered":"<p>Learn to copy a directory into a new location in Java. Learn to apply FileFilter to include or exclude subdirectories and specific files.<\/p>\n","protected":false},"author":2,"featured_media":20207,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"categories":[19],"tags":[1418],"uagb_featured_image_src":{"full":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2019\/03\/JAVA.jpg",750,425,false],"thumbnail":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2019\/03\/JAVA-150x150.jpg",150,150,true],"medium":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2019\/03\/JAVA-300x170.jpg",300,170,true],"medium_large":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2019\/03\/JAVA.jpg",750,425,false],"large":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2019\/03\/JAVA.jpg",750,425,false],"1536x1536":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2019\/03\/JAVA.jpg",750,425,false],"2048x2048":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2019\/03\/JAVA.jpg",750,425,false],"yarpp-thumbnail":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2019\/03\/JAVA-120x120.jpg",120,120,true]},"uagb_author_info":{"display_name":"Lokesh Gupta","author_link":"https:\/\/howtodoinjava.com\/author\/lokeshgupta1981\/"},"uagb_comment_info":0,"uagb_excerpt":"Learn to copy a directory into a new location in Java. Learn to apply FileFilter to include or exclude subdirectories and specific files.","_links":{"self":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts\/4452"}],"collection":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/comments?post=4452"}],"version-history":[{"count":0,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts\/4452\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/media\/20207"}],"wp:attachment":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/media?parent=4452"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/categories?post=4452"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/tags?post=4452"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}