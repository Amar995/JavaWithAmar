{"id":8201,"date":"2017-06-08T18:14:40","date_gmt":"2017-06-08T12:44:40","guid":{"rendered":"http:\/\/howtodoinjava.com\/?p=8201"},"modified":"2022-04-12T14:08:49","modified_gmt":"2022-04-12T08:38:49","slug":"java-read-file-to-string-examples","status":"publish","type":"post","link":"https:\/\/howtodoinjava.com\/java\/io\/java-read-file-to-string-examples\/","title":{"rendered":"Reading a File to String in Java"},"content":{"rendered":"\n<p>Learn to <strong>read a text file into String<\/strong> in Java. Following examples use <code>Files.readAllBytes()<\/code>, <code>Files.lines()<\/code> (to <strong>read line by line<\/strong>) and <code>FileReader<\/code> and <code>BufferedReader<\/code> to <strong>read a file to String<\/strong>.<\/p>\n\n\n\t\t\t\t<div class=\"wp-block-uagb-table-of-contents uagb-toc__align-left uagb-toc__columns-1   uagb-block-c67bdd3c \" \n\t\t\t\t\tdata-scroll= \"1\"\n\t\t\t\t\tdata-offset= \"30\"\n\t\t\t\t\tdata-delay= \"800\"\n\t\t\t\t>\n\t\t\t\t<div class=\"uagb-toc__wrap\">\n\t\t\t\t\t<div class=\"uagb-toc__title-wrap\">\n\t\t\t\t\t\t<div class=\"uagb-toc__title\">\n\t\t\t\t\t\t\tTable Of Contents\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"uagb-toc__list-wrap\">\n\t\t\t\t\t\t<ol class=\"uagb-toc__list\"><li class=\"uagb-toc__list\"><a href=\"#1-using-filesreadstring-java-11\">1. Using Files.readString() &#8211; Java 11<\/a><ul class=\"uagb-toc__list\"><li class=\"uagb-toc__list\"><a href=\"#example-1-reading-the-complete-file-into-a-string\">Example 1: Reading the Complete File into a String<\/a><\/li><\/ul><\/li><li class=\"uagb-toc__list\"><a href=\"#2-using-fileslines-java-8\">2. Using Files.lines() &#8211; Java 8<\/a><ul class=\"uagb-toc__list\"><li class=\"uagb-toc__list\"><a href=\"#example-2-reading-a-file-into-stream-of-lines\">Example 2: Reading a File into Stream of Lines<\/a><\/li><\/ul><\/li><\/ul><\/li><li class=\"uagb-toc__list\"><a href=\"#3-using-filesreadallbytes-java-7\">3. Using Files.readAllBytes() &#8211; Java 7<\/a><ul class=\"uagb-toc__list\"><li class=\"uagb-toc__list\"><a href=\"#example-3-reading-entire-file-to-byte\">Example 3: Reading Entire File to byte[]<\/a><\/li><\/ul><\/li><\/ul><\/li><\/ul><\/li><li class=\"uagb-toc__list\"><a href=\"#4-using-bufferedreader-java-6\">4. Using BufferedReader &#8211; Java 6<\/a><ul class=\"uagb-toc__list\"><li class=\"uagb-toc__list\"><a href=\"#example-4-reading-a-file-line-by-line\">Example 4: Reading a File Line by Line<\/a><\/li><\/ul><\/li><\/ul><\/li><\/ul><\/li><\/ul><\/li><li class=\"uagb-toc__list\"><a href=\"#5-apache-commons-io\">5. Apache Commons IO<\/a><li class=\"uagb-toc__list\"><a href=\"#6-google-guava\">6. Google Guava<\/a><\/li><\/ul><\/li><\/ul><\/li><\/ul><\/li><\/ul><\/ol>\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\n\n\n<h2 id=\"1-using-files-readstring-java-11\">1. Using Files.readString() &#8211; Java 11<\/h2>\n\n\n\n<p>With the new method <a href=\"https:\/\/howtodoinjava.com\/java11\/files-readstring-read-file-to-string\/\">readString()<\/a> introduced in <a href=\"https:\/\/howtodoinjava.com\/java11\/features-enhancements\/\" target=\"_blank\" rel=\"noopener noreferrer\">Java 11<\/a>, it takes only a single line to read a file&#8217;s content into <code>String<\/code> using the\u00a0<code>UTF-8<\/code>\u00a0<code>charset<\/code>.<\/p>\n\n\n\n<ul><li>In case of any error during the read operation, this method ensures that the <strong>file is properly closed<\/strong>.<\/li><li>It throws <code><a href=\"https:\/\/docs.oracle.com\/en\/java\/javase\/11\/docs\/api\/java.base\/java\/lang\/OutOfMemoryError.html\" target=\"_blank\" rel=\"noreferrer noopener\">OutOfMemoryError<\/a><\/code> if the file is extremely large, for example, larger than&nbsp;<code>2GB<\/code>.<\/li><\/ul>\n\n\n\n<h3 id=\"example-1-reading-the-complete-file-into-a-string\">Example 1: Reading the Complete File into a String<\/h3>\n\n\n\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">Path filePath = Path.of(\"c:\/temp\/demo.txt\");\n\nString content = Files.readString(fileName);<\/code><\/pre>\n\n\n\n<h2 id=\"2-using-files-lines-java-8\">2. Using Files.lines() &#8211; Java 8<\/h2>\n\n\n\n<p>The lines() method reads all lines from a file into a Stream. The Stream is populated lazily when the <a href=\"https:\/\/howtodoinjava.com\/java\/stream\/java-streams-by-examples\/\">stream<\/a> is consumed. <\/p>\n\n\n\n<ul><li>Bytes from the file are decoded into characters using the specified charset.<\/li><li>The returned stream contains a reference to an open file. The <strong>file is closed by closing the stream<\/strong>.<\/li><li>The file contents should not be modified during the reading process, else the result is undefined.<\/li><\/ul>\n\n\n\n<h3 id=\"example-2-reading-a-file-into-stream-of-lines\">Example 2: Reading a File into Stream of Lines<\/h3>\n\n\n\n<pre title=\"Read file to Stream of Lines\" class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">Path filePath = Path.of(\"c:\/temp\/demo.txt\");\nStringBuilder contentBuilder = new StringBuilder();\n\ntry (Stream&lt;String&gt; stream \n  = Files.lines(Paths.get(filePath), StandardCharsets.UTF_8))\n{\n  \/\/Read the content with Stream\n  stream.forEach(s -&gt; contentBuilder.append(s).append(\"\\n\"));\n}\ncatch (IOException e)\n{\n  e.printStackTrace();\n}\n\nString fileContent = contentBuilder.toString();<\/code><\/pre>\n\n\n\n<h2 id=\"3-using-files-readallbytes-java-7\">3. Using Files.readAllBytes() &#8211; Java 7<\/h2>\n\n\n\n<p>The <a href=\"https:\/\/docs.oracle.com\/javase\/7\/docs\/api\/java\/nio\/file\/Files.html#readAllBytes(java.nio.file.Path)\" target=\"_blank\" rel=\"noreferrer noopener\">readAllBytes()<\/a> method reads all the bytes from a file into a byte[]. <strong>Do not use this method for reading large files<\/strong>.<\/p>\n\n\n\n<p>This method ensures that the file is closed when all bytes have been read or an I\/O error, or other runtime exception, is thrown. After reading all the bytes, we pass those bytes to <code>String<\/code> class constructor to create a new String.<\/p>\n\n\n\n<h3 id=\"example-3-reading-entire-file-to-byte\">Example 3: Reading Entire File to byte[]<\/h3>\n\n\n\n<pre title=\"Reading file to byte array\" class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">Path filePath = Path.of(\"c:\/temp\/demo.txt\");\nString fileContent = \"\";\n\ntry\n{\n    byte[] bytes = Files.readAllBytes(Paths.get(filePath));\n    fileContent = new String (bytes);\n} \ncatch (IOException e) \n{\n    e.printStackTrace();\n}<\/code><\/pre>\n\n\n\n<h2 id=\"4-using-bufferedreader-java-6\">4. Using BufferedReader &#8211; Java 6<\/h2>\n\n\n\n<p>If you are still not using Java 7 or later, then use <a href=\"https:\/\/howtodoinjava.com\/java\/io\/java-bufferedreader-example\/\">BufferedReader<\/a> class. Its <code>readLine()<\/code> method reads the file one line at a time and returns the content<code>.<\/code><\/p>\n\n\n\n<h3 id=\"example-4-reading-a-file-line-by-line\">Example 4: Reading a File Line by Line<\/h3>\n\n\n\n<pre title=\"Read file line by line\" class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">Path filePath = Path.of(\"c:\/temp\/demo.txt\");\nString fileContent = \"\";\n\nStringBuilder contentBuilder = new StringBuilder();\ntry (BufferedReader br = new BufferedReader(new FileReader(filePath))) \n{\n\n    String sCurrentLine;\n    while ((sCurrentLine = br.readLine()) != null) \n    {\n        contentBuilder.append(sCurrentLine).append(\"\\n\");\n    }\n} \ncatch (IOException e) \n{\n    e.printStackTrace();\n}\n\nfileContent = contentBuilder.toString();<\/code><\/pre>\n\n\n\n<h2 id=\"5-apache-commons-io\">5. Apache Commons IO<\/h2>\n\n\n\n<p>We can use the utility classes provided by the <a href=\"https:\/\/mvnrepository.com\/artifact\/commons-io\/commons-io\" target=\"_blank\" rel=\"noreferrer noopener\">Apache Commons IO<\/a> library. <\/p>\n\n\n\n<p>The <em>FileUtils.readFileToString()<\/em> is an excellent way to <em>read a whole file into a String in a single statement<\/em>.<\/p>\n\n\n\n<pre title=\"Read file in single statement\" class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">File file = new File(\"c:\/temp\/demo.txt\");\n\nString content = FileUtils.readFileToString(file, \"UTF-8\");<\/code><\/pre>\n\n\n\n<h2 id=\"6-google-guava\">6. Google Guava<\/h2>\n\n\n\n<p>Guava also provides <em>Files<\/em> class that can be used to read the file content in a single statement.<\/p>\n\n\n\n<pre title=\"Read file in single statement\" class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">File file = new File(\"c:\/temp\/demo.txt\");\n\nString content = com.google.common.io.Files.asCharSource(file, Charsets.UTF_8)\n      .read();<\/code><\/pre>\n\n\n\n<p>Use any of the above-given methods for reading a file into a string using Java.<\/p>\n\n\n\n<p>Happy Learning !!<\/p>\n\n\n\n<blockquote class=\"wp-block-quote is-style-default download\"><p><a href=\"https:\/\/github.com\/lokeshgupta1981\/Core-Java\/tree\/master\/src\/main\/java\/com\/howtodoinjava\/io\" target=\"_blank\" rel=\"noreferrer noopener\">Source Code on Github<\/a><\/p><\/blockquote>\n","protected":false},"excerpt":{"rendered":"<p>Learn to read a text file into String using Files.readAllBytes(), Files.lines() and BufferedReader classes in various ways.<\/p>\n","protected":false},"author":2,"featured_media":20207,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"categories":[19],"tags":[1418,1538],"uagb_featured_image_src":{"full":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2019\/03\/JAVA.jpg",750,425,false],"thumbnail":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2019\/03\/JAVA-150x150.jpg",150,150,true],"medium":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2019\/03\/JAVA-300x170.jpg",300,170,true],"medium_large":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2019\/03\/JAVA.jpg",750,425,false],"large":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2019\/03\/JAVA.jpg",750,425,false],"1536x1536":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2019\/03\/JAVA.jpg",750,425,false],"2048x2048":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2019\/03\/JAVA.jpg",750,425,false],"yarpp-thumbnail":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2019\/03\/JAVA-120x120.jpg",120,120,true]},"uagb_author_info":{"display_name":"Lokesh Gupta","author_link":"https:\/\/howtodoinjava.com\/author\/lokeshgupta1981\/"},"uagb_comment_info":2,"uagb_excerpt":"Learn to read a text file into String using Files.readAllBytes(), Files.lines() and BufferedReader classes in various ways.","_links":{"self":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts\/8201"}],"collection":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/comments?post=8201"}],"version-history":[{"count":0,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts\/8201\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/media\/20207"}],"wp:attachment":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/media?parent=8201"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/categories?post=8201"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/tags?post=8201"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}