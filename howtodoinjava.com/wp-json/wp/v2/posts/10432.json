{"id":10432,"date":"2018-05-30T09:18:48","date_gmt":"2018-05-30T03:48:48","guid":{"rendered":"https:\/\/howtodoinjava.com\/?p=10432"},"modified":"2022-04-22T23:05:20","modified_gmt":"2022-04-22T17:35:20","slug":"java-append-to-file","status":"publish","type":"post","link":"https:\/\/howtodoinjava.com\/java\/io\/java-append-to-file\/","title":{"rendered":"Appending to a File in Java"},"content":{"rendered":"\n<p>Learn to <strong>append the data to a file in Java<\/strong> using BufferedWritter, PrintWriter, FileOutputStream and Files classes. In all the examples, while opening the file to write, we have passed a second argument as true which denotes that the <strong>file needs to be opened in append mode<\/strong>.<\/p>\n\n\n\t\t\t\t<div class=\"wp-block-uagb-table-of-contents uagb-toc__align-left uagb-toc__columns-1   uagb-block-e6eb3fc3 \" \n\t\t\t\t\tdata-scroll= \"1\"\n\t\t\t\t\tdata-offset= \"30\"\n\t\t\t\t\tdata-delay= \"800\"\n\t\t\t\t>\n\t\t\t\t<div class=\"uagb-toc__wrap\">\n\t\t\t\t\t<div class=\"uagb-toc__title-wrap\">\n\t\t\t\t\t\t<div class=\"uagb-toc__title\">\n\t\t\t\t\t\t\tTable Of Contents\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"uagb-toc__list-wrap\">\n\t\t\t\t\t\t<ol class=\"uagb-toc__list\"><li class=\"uagb-toc__list\"><a href=\"#1-using-nio-files\">1. Using NIO Files<\/a><li class=\"uagb-toc__list\"><a href=\"#2-using-bufferedwriter\">2. Using BufferedWriter<\/a><li class=\"uagb-toc__list\"><a href=\"#3-using-printwriter\">3. Using PrintWriter<\/a><li class=\"uagb-toc__list\"><a href=\"#4-using-fileoutputstream\">4. Using FileOutputStream<\/a><\/ol>\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\n\n\n<h2>1. Using NIO <em>Files<\/em><\/h2>\n\n\n\n<p>With <code><a href=\"https:\/\/docs.oracle.com\/en\/java\/javase\/17\/docs\/api\/java.base\/java\/nio\/file\/Files.html\" target=\"_blank\" rel=\"noreferrer noopener\">Files<\/a><\/code> class, we can write a file using it\u2019s <code>write()<\/code> function. Internally <code>write()<\/code> function uses <code>OutputStream<\/code> to write byte array into the file.<\/p>\n\n\n\n<p>To append content to an existing file, Use <code><a href=\"https:\/\/docs.oracle.com\/javase\/7\/docs\/api\/java\/nio\/file\/StandardOpenOption.html\">StandardOpenOption.APPEND<\/a><\/code> while writing the content.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">String textToAppend = \"Happy Learning !!\";\r\n\r\nPath path = Paths.get(\"c:\/temp\/samplefile.txt\");\r\n\r\nFiles.write(path, textToAppend.getBytes(), StandardOpenOption.APPEND); <\/code><\/pre>\n\n\n\n<h2>2. Using <em>BufferedWriter<\/em><\/h2>\n\n\n\n<p><code>BufferedWriter<\/code> buffers the data in an internal byte array before writing to the file, so it results in <strong>fewer IO operations<\/strong> and improves the performance.<\/p>\n\n\n\n<p>To append a string to an existing file, open the <code>writer<\/code> in append mode and pass the second argument as <code>true<\/code>.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">String textToAppend = \"Happy Learning !!\";\r\nStrinng filePath = \"c:\/temp\/samplefile.txt\";\r\n\r\ntry(FileWriter fw = new FileWriter(filePath, true);\r\nBufferedWriter writer = new BufferedWriter(fw);) {\r\n\r\n  writer.write(textToAppend);\r\n}  <\/code><\/pre>\n\n\n\n<h2>3. Using <em>PrintWriter<\/em><\/h2>\n\n\n\n<p>We can use the <code><a href=\"https:\/\/docs.oracle.com\/javase\/10\/docs\/api\/java\/io\/PrintWriter.html\">PrintWriter<\/a><\/code> to write formatted text to a file. <em>PrintWriter<\/em> implements all of the <em>print()<\/em> methods found in <code>PrintStream<\/code>, so we can use all formats which you use with <code>System.out.println()<\/code> statements.<\/p>\n\n\n\n<p>To append content to an existing file, open the writer in append mode by passing the second argument as <code>true<\/code>.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">String textToAppend = \"Happy Learning !!\";\r\nString fileName = \"c:\/temp\/samplefile.txt\";\r\n\r\ntry(FileWriter fileWriter = new FileWriter(fileName, true);\r\nPrintWriter printWriter = new PrintWriter(fileWriter);) {\r\n  \r\n  printWriter.println(textToAppend);\r\n}<\/code><\/pre>\n\n\n\n<h2>4. Using <em>FileOutputStream<\/em><\/h2>\n\n\n\n<p>Use <code><a href=\"https:\/\/docs.oracle.com\/javase\/10\/docs\/api\/java\/io\/FileOutputStream.html\">FileOutputStream<\/a><\/code> to <strong>write binary data to a file<\/strong>. <code>FileOutputStream<\/code> is meant for writing streams of raw bytes such as image data. For writing streams of characters, consider using <code>FileWriter<\/code>.<\/p>\n\n\n\n<p>To <em>append content to an existing file<\/em>, open <code>FileOutputStream<\/code> in append mode by passing the second argument as <code>true<\/code>.<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">String textToAppend = \"\\r\\n Happy Learning !!\"; \r\nString fileName = \"c:\/temp\/samplefile.txt\";\r\n\r\ntry(FileOutputStream outputStream \r\n  = new FileOutputStream(fileName, true)) {\r\n  \r\n  byte[] strToBytes = textToAppend.getBytes();\r\n  outputStream.write(strToBytes);\r\n}<\/code><\/pre>\n\n\n\n<p>Happy Learning !!<\/p>\n\n\n\n<blockquote class=\"wp-block-quote is-style-default download\"><p><a href=\"https:\/\/github.com\/lokeshgupta1981\/Core-Java\/tree\/master\/src\/main\/java\/com\/howtodoinjava\/io\" target=\"_blank\" rel=\"noreferrer noopener\">Source Code on Github<\/a><\/p><\/blockquote>\n","protected":false},"excerpt":{"rendered":"<p>Learn to append the data to a file in Java using Standard IO&#8217;s BufferedWritter, PrintWriter, FileOutputStream and NIO Files classes.<\/p>\n","protected":false},"author":2,"featured_media":20207,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"categories":[19],"tags":[1418],"uagb_featured_image_src":{"full":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2019\/03\/JAVA.jpg",750,425,false],"thumbnail":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2019\/03\/JAVA-150x150.jpg",150,150,true],"medium":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2019\/03\/JAVA-300x170.jpg",300,170,true],"medium_large":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2019\/03\/JAVA.jpg",750,425,false],"large":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2019\/03\/JAVA.jpg",750,425,false],"1536x1536":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2019\/03\/JAVA.jpg",750,425,false],"2048x2048":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2019\/03\/JAVA.jpg",750,425,false],"yarpp-thumbnail":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2019\/03\/JAVA-120x120.jpg",120,120,true]},"uagb_author_info":{"display_name":"Lokesh Gupta","author_link":"https:\/\/howtodoinjava.com\/author\/lokeshgupta1981\/"},"uagb_comment_info":2,"uagb_excerpt":"Learn to append the data to a file in Java using Standard IO's BufferedWritter, PrintWriter, FileOutputStream and NIO Files classes.","_links":{"self":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts\/10432"}],"collection":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/comments?post=10432"}],"version-history":[{"count":0,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts\/10432\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/media\/20207"}],"wp:attachment":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/media?parent=10432"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/categories?post=10432"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/tags?post=10432"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}