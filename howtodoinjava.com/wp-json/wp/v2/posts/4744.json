{"id":4744,"date":"2015-06-08T07:01:01","date_gmt":"2015-06-08T01:31:01","guid":{"rendered":"http:\/\/howtodoinjava.com\/?p=4744"},"modified":"2022-01-25T02:01:24","modified_gmt":"2022-01-24T20:31:24","slug":"java-tutorial","status":"publish","type":"post","link":"https:\/\/howtodoinjava.com\/java\/basics\/java-tutorial\/","title":{"rendered":"Java Tutorial"},"content":{"rendered":"\n<p>In this <strong>Java tutorial for beginners<\/strong>, learn how Java is <a href=\"https:\/\/howtodoinjava.com\/java-concurrency-tutorial\/\" target=\"_blank\" rel=\"noopener noreferrer\">concurrent<\/a>, <a href=\"https:\/\/howtodoinjava.com\/java\/oops\/object-oriented-programming\/\" target=\"_blank\" rel=\"noopener noreferrer\">object-oriented<\/a>, and is intended to let application developers &#8220;<a href=\"https:\/\/en.wikipedia.org\/wiki\/Write_once,_run_anywhere\" target=\"_blank\" rel=\"noopener noreferrer\">write once, run anywhere<\/a>&#8221; (WORA).<\/p>\n\n\n\t\t\t\t<div class=\"wp-block-uagb-table-of-contents uagb-toc__align-left uagb-toc__columns-1   uagb-block-365a2ae7 \" \n\t\t\t\t\tdata-scroll= \"1\"\n\t\t\t\t\tdata-offset= \"30\"\n\t\t\t\t\tdata-delay= \"800\"\n\t\t\t\t>\n\t\t\t\t<div class=\"uagb-toc__wrap\">\n\t\t\t\t\t<div class=\"uagb-toc__title-wrap\">\n\t\t\t\t\t\t<div class=\"uagb-toc__title\">\n\t\t\t\t\t\t\tTable Of Contents\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"uagb-toc__list-wrap\">\n\t\t\t\t\t\t<ol class=\"uagb-toc__list\"><li class=\"uagb-toc__list\"><a href=\"#1-what-is-java-programming-language\">1. What is Java Programming Language<\/a><li class=\"uagb-toc__list\"><a href=\"#2-history-of-java\">2. History of Java<\/a><li class=\"uagb-toc__list\"><a href=\"#3-features-of-java\">3. Features of Java<\/a><li class=\"uagb-toc__list\"><a href=\"#4-automatic-garbage-collection\">4. Automatic Garbage Collection<\/a><li class=\"uagb-toc__list\"><a href=\"#5-java-hello-world-program\">5. Java Hello World Program<\/a><li class=\"uagb-toc__list\"><a href=\"#6-learning-java\">6. Learning Java<\/a><\/ol>\t\t\t\t\t<\/div>\n\t\t\t\t\t\t\t\t\t<\/div>\n\t\t\t\t<\/div>\n\t\t\t\n\n\n<h2>1. What is Java Programming Language<\/h2>\n\n\n\n<p>Java is a general-purpose computer <strong>programming language<\/strong> that is <em>concurrent<\/em>, <em>class-based<\/em>, <em>object-oriented<\/em>, and specifically designed to have as few implementation dependencies as possible. It is intended to let application developers <strong>&#8220;write once, run anywhere&#8221; (WORA)<\/strong>, meaning that compiled Java code can run on all platforms that support Java without the need for recompilation.<\/p>\n\n\n\n<p>For example, we can write and compile a Java program on UNIX and run it on Microsoft Windows, Macintosh, or UNIX machines without any modifications to the source code. <\/p>\n\n\n\n<p><code>WORA<\/code> is achieved by compiling a Java program into an intermediate language called <strong>bytecode<\/strong>. The format of bytecode is <em>platform-independent<\/em>. A virtual machine, called the <a href=\"https:\/\/howtodoinjava.com\/java\/basics\/jdk-jre-jvm\/\" target=\"_blank\" rel=\"noreferrer noopener\">Java Virtual Machine (JVM)<\/a>, is used to run the bytecode on each platform.<\/p>\n\n\n\n<div class=\"wp-block-image size-full wp-image-10368\"><figure class=\"aligncenter\"><img loading=\"lazy\" width=\"544\" height=\"439\" src=\"https:\/\/howtodoinjava.com\/wp-content\/uploads\/2018\/05\/JDK-JRE-JVM.png\" alt=\"JDK vs JRE vs JVM\" class=\"wp-image-10368\"\/><figcaption>JDK vs JRE vs JVM<\/figcaption><\/figure><\/div>\n\n\n\n<h2>2. History of Java<\/h2>\n\n\n\n<p>Java was originally developed by <strong>James Gosling<\/strong> at <em>Sun Microsystems<\/em> (which has since been acquired by Oracle Corporation) and released in 1995 as a core component of Sun Microsystems&#8217; Java platform. The language derives much of its syntax from C and C++, but it has fewer low-level facilities than either of them.<\/p>\n\n\n\n<p><em>Oracle Corporation<\/em> is the current owner of the official implementation of the Java SE platform, following their acquisition of Sun Microsystems on January 27, 2010. This implementation is based on the original implementation of Java by Sun. The Oracle implementation is available for Microsoft Windows, Mac OS X, Linux, and Solaris.<\/p>\n\n\n\n<p>The Oracle implementation is packaged into two different distributions:<\/p>\n\n\n\n<ol><li><strong>Java Runtime Environment (JRE)<\/strong> which contains the parts of the Java SE platform required to run Java programs and is intended for end users.<\/li><li><strong>Java Development Kit (JDK)<\/strong> which is intended for software developers and includes development tools such as the Java compiler, Javadoc, Jar, and a debugger.<\/li><li><\/li><\/ol>\n\n\n\n<p>We can read about all the previous <a href=\"https:\/\/howtodoinjava.com\/java-version-wise-features-history\/\" target=\"_blank\" rel=\"noreferrer noopener\">Java releases and their features<\/a> in the linked post.<\/p>\n\n\n\n<h2>3. Features of Java<\/h2>\n\n\n\n<p>Java has multiple features. Some of these are unique to Java and some of these are common among other languages.<\/p>\n\n\n\n<ul><li><strong>Object Oriented<\/strong> &#8211; In Java, everything is represented as objects. An object is kind of wrapper that encapsulated data and its associated behavior. <p>Java provides support for all major object-oriented principles as seen in other object-oriented languages.<\/p><\/li><li><strong>Platform Independent<\/strong> &#8211; The programs written in Java are converted to bytecode first, by Java compiler. This bytecode can be run in any machine having Java runtime environment (JRE). It makes the Java applications platform-independent. <p>It is very different to C or C++ applications where programs compiled into binaries specific to OS.<\/p><\/li><li><strong>Secure<\/strong> &#8211; Java applications run in Java runtime environment (JRE) with almost no interaction with system OS. It makes Java more secure than other languages.<\/li><li><strong>Multithreaded<\/strong> &#8211; Java supports writing applications which can do multiple tasks in separate threads. All tasks progress using the <a href=\"https:\/\/en.wikipedia.org\/wiki\/Time_slice\" target=\"_blank\" rel=\"noopener noreferrer\">time slicing<\/a> technique of OS threads. <p>For example, a Java application serve a user login form while running background processes also.<\/p><\/li><li><strong>High-performance<\/strong> &#8211; Java is an interpreted language, so it may never be as fast as a compiled language like C or C++. But, Java enables high performance with the use of just-in-time compiler.<\/li><li><strong>OS Architecture-neutral<\/strong> &#8211; Java compiler generates an OS architecture-neutral class files or bytecode. <p>For example, in C programming, <code>int<\/code> data type occupies 2 bytes of memory for 32-bit architecture and 4 bytes of memory for 64-bit architecture. However, it occupies 4 bytes of memory for both 32 and 64-bit architectures in Java.<\/p><\/li><\/ul>\n\n\n\n<h2>4. Automatic Garbage Collection<\/h2>\n\n\n\n<p>Java uses an automatic <a href=\"\/\/howtodoinjava.com\/java\/garbage-collection\/revisiting-memory-management-and-garbage-collection-mechanisms-in-java\/\">garbage collector<\/a> to manage memory in the object lifecycle. The programmer determines when objects are created, and the Java runtime is responsible for recovering the memory once objects are no longer in use. Once no references to an object remain, the unreachable memory becomes eligible to be freed automatically by the garbage collector.<\/p>\n\n\n\n<p>Something similar to a memory leak may still occur if a programmer&#8217;s code holds a reference to an object that is no longer needed, typically when objects that are no longer needed are stored in containers that are still in use. If methods for a nonexistent object are called, a &#8220;<a href=\"\/\/howtodoinjava.com\/java\/exception-handling\/how-to-effectively-handle-nullpointerexception-in-java\/\" target=\"_blank\" rel=\"noreferrer noopener\">NullPointerException<\/a>&#8221; is thrown.<\/p>\n\n\n\n<p>Garbage collection may happen at any time. Ideally, it will occur when a program is idle. It is guaranteed to be triggered if there is insufficient free memory on the heap to allocate a new object; this can cause a program to stall momentarily. Explicit memory management is not possible in Java.<\/p>\n\n\n\n<h2>5. Java Hello World Program<\/h2>\n\n\n\n<p>The traditional &#8220;Hello, world!&#8221; program can be written in Java as:<\/p>\n\n\n\n<pre title=\"Application.java\" class=\"wp-block-code\"><code lang=\"java\" class=\"language-java\">public class Application\n{\n    public static void main(String[] args)\n    {\n        System.out.println(\"Hello World!\"); \t\/\/ Prints Hello World! to the console.\n    }\n}<\/code><\/pre>\n\n\n\n<ol><li>Java source files must be named after the public class they contain, appending the suffix <code>.java<\/code>, for example, <code>Application.java<\/code>.<\/li><li>It must first be compiled into bytecode, using a Java compiler, producing a file named <code>Application.class<\/code>. Only then can it be executed, or &#8216;launched&#8217;.<\/li><li>The Java source file may only contain one public class, but it can contain multiple classes with other than public access and any number of public inner classes.<\/li><li>When the source file contains multiple classes, make one class &#8216;public&#8217; and name the source file with that public class name.<\/li><\/ol>\n\n\n\n<h2>6. Learning Java<\/h2>\n\n\n\n<p>Follow the given topics to understand Java basics and progress towards the advanced topics.<\/p>\n\n\n\n<h3>6.1. Java Basics<\/h3>\n\n\n\n<ul id=\"menu-java-basics\"><li><a href=\"https:\/\/howtodoinjava.com\/java\/basics\/install-java-on-64-bit-windows\/\">Java Installation<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/basics\/jdk-jre-jvm\/\">Java JDK, JRE and JVM<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/basics\/difference-between-32-bit-java-vs-64-bit-java\/\">Java 32-bit vs 64-bit<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/basics\/difference-between-java-exe-and-javaw-exe\/\">Java java.exe vs javaw.exe<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/basics\/java-naming-conventions\/\">Java Naming Conventions<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/basics\/java-classes-objects\/\">Java Classes and Objects<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/basics\/java-is-pass-by-value-lets-see-how\/\">Java Pass-by-Value<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/basics\/main-method\/\">Java main() Method<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java-keywords\/\">Java Keywords<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/basics\/operators-in-java\/\">Java Operators<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/basics\/data-types-in-java\/\">Java Data Types<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/basics\/primitive-data-types-in-java\/\">Java Primitive Types<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/basics\/java-wrapper-classes\/\">Java Wrapper Classes<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/basics\/java-variables\/\">Java Variables<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/basics\/java-comments\/\">Java Comments<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/basics\/command-line-args\/\">Java Command Line Args<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/basics\/types-of-statements-in-java\/\">Java Statements<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/flow-control\/control-flow-statements\/\">Java Flow Control Statements<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/basics\/what-is-block-statement-in-java\/\">Java Block Statement<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/basics\/java-hashcode-equals-methods\/\">Java hashCode() and equals()<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/basics\/how-to-make-a-java-class-immutable\/\">Java Immutable Class<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/basics\/java-system-properties\/\">Java System Properties<\/a><\/li><\/ul>\n\n\n\n<h3>6.2. Java OOP<\/h3>\n\n\n\n<ul id=\"menu-object-oriented-programming\"><li><a href=\"https:\/\/howtodoinjava.com\/java\/oops\/object-oriented-programming\/?swcfpc=1\">OOP \u2013 Introduction<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/oops\/java-access-modifiers\/?swcfpc=1\">OOP \u2013 Access Modifiers<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/oops\/java-constructors\/?swcfpc=1\">OOP \u2013 Constructors<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/oops\/java-instance-initializer\/?swcfpc=1\">OOP \u2013 Instance Initializers<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/oops\/understanding-abstraction-in-java\/?swcfpc=1\">OOP \u2013 Abstraction<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/oops\/encapsulation-in-java-and-its-relation-with-abstraction\/?swcfpc=1\">OOP \u2013 Encapsulation<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/oops\/java-inheritance\/?swcfpc=1\">OOP \u2013 Inheritance<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/oops\/what-is-polymorphism-in-java\/?swcfpc=1\">OOP \u2013 Polymorphism<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/oops\/method-overloading-overriding\/?swcfpc=1\">OOP \u2013 Overloading vs Overriding<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/oops\/exploring-interfaces-and-abstract-classes-in-java\/?swcfpc=1\">OOP \u2013 Interface vs Abstract Class<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/oops\/extends-vs-implements\/?swcfpc=1\">OOP \u2013 extends vs implements<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/oops\/java-instanceof\/?swcfpc=1\">OOP \u2013 instanceof operator<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/oops\/multiple-inheritance-in-java\/?swcfpc=1\">OOP \u2013 Multiple Inheritance<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/oops\/association-aggregation-composition\/?swcfpc=1\">Association, Aggregation and Composition<\/a><\/li><\/ul>\n\n\n\n<h3>6.3. Java Collections<\/h3>\n\n\n\n<ul id=\"menu-java-collections\"><li><a href=\"https:\/\/howtodoinjava.com\/java-collections\/\" target=\"_blank\" rel=\"noreferrer noopener\">Collections Framework Introduction<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/series\/java-arrays\/\">Array<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java-arraylist\/\">ArrayList<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java-hashmap\/\">HashMap<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/collections\/hashtable-class\/\">Hashtable<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/collections\/java-comparable-interface\/\">Comparable<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/collections\/java-comparator\/\">Comparator<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/collections\/java-iterator\/\">Iterator<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/sort\/java-sorting\/\">Sorting<\/a><\/li><\/ul>\n\n\n\n<h3 class=\"gb-headline gb-headline-76721be6 gb-headline-text\">6.4. Java Input\/Output<\/h3>\n\n\n\n<ul id=\"menu-java-io\"><li><a href=\"https:\/\/howtodoinjava.com\/java\/io\/how-to-create-a-new-file-in-java\/\">Java Create File<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/io\/java-write-to-file\/\">Java Write to File<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/io\/java-append-to-file\/\">Java Append to File<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/io\/java-read-file-to-string-examples\/\">Java Read File<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/io\/java-read-file-to-string-examples\/\">Java Read File to String<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/io\/copy-files-in-java\/\">Java Copy File<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/io\/how-to-copy-directories-in-java\/\">Java Copy Directory<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/io\/delete-directory-recursively\/\">Java Delete Directory<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/io\/get-current-working-directory\/\">Java Current Working Directory<\/a><\/li><\/ul>\n\n\n\n<h3>6.5. Java 8 Features<\/h3>\n\n\n\n<ul id=\"menu-java-8\"><li><a href=\"https:\/\/howtodoinjava.com\/java8\/foreach-method-example\/\">Java 8 forEach<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/stream\/java-streams-by-examples\/\">Java 8 Stream<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java8\/lambda-expressions\/\">Java 8 Lambda Expression<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java\/stream\/functional-interface-tutorial\/\">Java 8 Functional Interface<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java8\/lambda-method-references-example\/\">Java 8 Method Reference<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java8\/default-methods-in-java-8\/\">Java 8 Default Method<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java8\/java-8-optionals-complete-reference\/\">Java 8 Optional<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java8\/how-to-use-predicate-in-java-8\/\">Java 8 Predicate<\/a><\/li><li><a href=\"https:\/\/howtodoinjava.com\/java8\/date-and-time-api-changes-in-java-8-lambda\/\" target=\"_blank\" rel=\"noreferrer noopener\">Java 8 Date Time Changes<\/a><\/li><\/ul>\n\n\n\n<p>The above list of Java topics is not exhaustive. This will help you to get started and once you know the basics, you can explore more advanced topics in this blog.<\/p>\n\n\n\n<p>Happy Learning !!<\/p>\n","protected":false},"excerpt":{"rendered":"<p>In this Java tutorial for beginners, learn how Java is concurrent, object-oriented, and is intended to let application developers &#8220;write once, run anywhere&#8221; (WORA). 1. What is Java Programming Language Java is a general-purpose computer programming language that is concurrent, class-based, object-oriented, and specifically designed to have as few implementation dependencies as possible. It is &#8230; <a title=\"Java Tutorial\" class=\"read-more\" href=\"https:\/\/howtodoinjava.com\/java\/basics\/java-tutorial\/\" aria-label=\"More on Java Tutorial\">Read more<\/a><\/p>\n","protected":false},"author":2,"featured_media":46,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"categories":[753],"tags":[1439,4],"uagb_featured_image_src":{"full":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2012\/10\/java71.jpeg",120,120,false],"thumbnail":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2012\/10\/java71.jpeg",120,120,false],"medium":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2012\/10\/java71.jpeg",120,120,false],"medium_large":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2012\/10\/java71.jpeg",120,120,false],"large":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2012\/10\/java71.jpeg",120,120,false],"1536x1536":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2012\/10\/java71.jpeg",120,120,false],"2048x2048":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2012\/10\/java71.jpeg",120,120,false],"yarpp-thumbnail":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2012\/10\/java71.jpeg",120,120,false]},"uagb_author_info":{"display_name":"Lokesh Gupta","author_link":"https:\/\/howtodoinjava.com\/author\/lokeshgupta1981\/"},"uagb_comment_info":3,"uagb_excerpt":"In this Java tutorial for beginners, learn how Java is concurrent, object-oriented, and is intended to let application developers &#8220;write once, run anywhere&#8221; (WORA). 1. What is Java Programming Language Java is a general-purpose computer programming language that is concurrent, class-based, object-oriented, and specifically designed to have as few implementation dependencies as possible. It is&hellip;","_links":{"self":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts\/4744"}],"collection":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/comments?post=4744"}],"version-history":[{"count":0,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts\/4744\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/media\/46"}],"wp:attachment":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/media?parent=4744"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/categories?post=4744"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/tags?post=4744"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}