{"id":12127,"date":"2018-11-15T19:11:40","date_gmt":"2018-11-15T13:41:40","guid":{"rendered":"https:\/\/howtodoinjava.com\/?p=12127"},"modified":"2022-01-30T00:11:10","modified_gmt":"2022-01-29T18:41:10","slug":"java-instance-initializer","status":"publish","type":"post","link":"https:\/\/howtodoinjava.com\/java\/oops\/java-instance-initializer\/","title":{"rendered":"Java Instance Initializer Blocks"},"content":{"rendered":"<p><strong>Java instance initializers<\/strong> are code blocks which are executed before the <a href=\"https:\/\/howtodoinjava.com\/java\/oops\/java-constructors\/\">constructor<\/a> code is executed. These initializers run everytime we create a new object.<\/p>\n<h2>1. Instance initializer syntax<\/h2>\n<p>An instance initializer block is created with <strong>curly braces<\/strong>. The object initialization statements are written inside the braces.<\/p>\n<pre class=\"brush: java; title: Syntax; notranslate\" title=\"Syntax\">\npublic class DemoClass {\n\n\/\/This is initializer block 1\n{\n\/\/statements\n}\n\n\/\/This is initializer block 2\n{\n\/\/statements\n}\n}\n<\/pre>\n<h2>2. Java instance initializer features<\/h2>\n<p>The instance initializers have following features.<\/p>\n<ul>\n<li>We can define <strong>multiple initializers<\/strong> in a class.<\/li>\n<li>All initializers execute in sequence in order they appear in class body.<\/li>\n<li>Initializers run after the parent class constructor has been invoked and before executing child class constructor. Please note that Java inserts the default constructor of parent class <code>super()<\/code>, if we do not explicitly provide the constructor as the <strong>first statement<\/strong> in child class&#8217;s constructor.<\/li>\n<li>After all the initializers have executed, constructor&#8217;s statements are executed.<\/li>\n<li>We can use call the constructors of this class and parent classes inside initializers.<\/li>\n<\/ul>\n<h2>3. Java instance initialization sequence flow<\/h2>\n<p>Based on above given features, let&#8217;s draw an outline how the instance initialization of an object flows.<\/p>\n<ol>\n<li>Child class constructor is invoked.<\/li>\n<li>Child class constructor has first statement as <strong>super()<\/strong> (or provided explicit constructor) so parent class constructor is invoked.<\/li>\n<li>Parent class&#8217;s initializers are executed in sequence of their appearance.<\/li>\n<li>Parent class constructor statements are executed.<\/li>\n<li>Child class&#8217;s initializers are executed in sequence of their appearance.<\/li>\n<li>Child class constructor statements are executed.<\/li>\n<\/ol>\n<h2>4. Java instance initializer example<\/h2>\n<p>Let&#8217;s quickly see an example to demo above theory.<\/p>\n<pre class=\"brush: java; title: ParentClass.java; notranslate\" title=\"ParentClass.java\">\npublic class ParentClass\n{\npublic ParentClass()\n{\nSystem.out.println(&quot;In ParentClass Constructor&quot;);\n}\n\n\/\/Instance Initializer\n{\nSystem.out.println(&quot;In ParentClass Instance Initializer&quot;);\n}\n}\n<\/pre>\n<pre class=\"brush: java; title: ChildClass.java; notranslate\" title=\"ChildClass.java\">\npublic class ChildClass extends ParentClass\n{\npublic ChildClass()\n{\nsuper();  \/\/If not provided, JVM will insert it\nSystem.out.println(&quot;In ChildClass Constructor&quot;);\n}\n\n\/\/Instance Initializer 1\n{\nSystem.out.println(&quot;In ChildClass Instance Initializer 1&quot;);\n}\n\n\/\/Instance Initializer 2\n{\nSystem.out.println(&quot;In ChildClass Instance Initializer 2&quot;);\n}\n}\n\n<\/pre>\n<pre class=\"brush: java; title: Main.java; notranslate\" title=\"Main.java\">\npublic class Main\n{\npublic static void main(String[] args)\n{\nChildClass childObj = new ChildClass();\n}\n}\n<\/pre>\n<p>Program output.<\/p>\n<pre class=\"brush: java; title: Console; notranslate\" title=\"Console\">\nIn ParentClass Instance Initializer\nIn ParentClass Constructor\nIn ChildClass Instance Initializer 1\nIn ChildClass Instance Initializer 2\nIn ChildClass Constructor\n<\/pre>\n<p>Happy Learning !!<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Java instance initializers are code blocks which are executed before the constructor code is executed. These initializers run everytime we create a new object.<\/p>\n","protected":false},"author":2,"featured_media":4758,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"categories":[30],"tags":[1454],"uagb_featured_image_src":{"full":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2015\/06\/java-8.jpg",200,200,false],"thumbnail":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2015\/06\/java-8-150x150.jpg",150,150,true],"medium":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2015\/06\/java-8.jpg",200,200,false],"medium_large":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2015\/06\/java-8.jpg",200,200,false],"large":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2015\/06\/java-8.jpg",200,200,false],"1536x1536":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2015\/06\/java-8.jpg",200,200,false],"2048x2048":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2015\/06\/java-8.jpg",200,200,false],"yarpp-thumbnail":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2015\/06\/java-8.jpg",120,120,false]},"uagb_author_info":{"display_name":"Lokesh Gupta","author_link":"https:\/\/howtodoinjava.com\/author\/lokeshgupta1981\/"},"uagb_comment_info":0,"uagb_excerpt":"Java instance initializers are code blocks which are executed before the constructor code is executed. These initializers run everytime we create a new object.","_links":{"self":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts\/12127"}],"collection":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/comments?post=12127"}],"version-history":[{"count":0,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts\/12127\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/media\/4758"}],"wp:attachment":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/media?parent=12127"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/categories?post=12127"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/tags?post=12127"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}