{"id":7728,"date":"2016-09-07T00:16:31","date_gmt":"2016-09-06T18:46:31","guid":{"rendered":"http:\/\/howtodoinjava.com\/?p=7728"},"modified":"2021-09-20T22:03:11","modified_gmt":"2021-09-20T16:33:11","slug":"hello-world-web-application-maven","status":"publish","type":"post","link":"https:\/\/howtodoinjava.com\/vaadin\/hello-world-web-application-maven\/","title":{"rendered":"Vaadin Hello World Web Application with Maven"},"content":{"rendered":"<p>In <strong>Vaadin hello world example<\/strong>, we will learn to create a simple Vaadin application, and then we will deploy the application in the built-in Jetty server.<\/p>\n<h2>1. Creating Vaadin Project using Maven Archetype<\/h2>\n<p>Use the below maven command in your workspace to create the simplest Vaadin web application.<\/p>\n<pre class=\"brush: java; title: ; notranslate\" title=\"\">$ mvn archetype:generate \r\n\t-DarchetypeGroupId=com.vaadin \r\n\t-DarchetypeArtifactId=vaadin-archetype-application \r\n\t-DarchetypeVersion=LATEST \r\n\t-DgroupId=com.howtodoinjava.vaadin.demo \r\n\t-DartifactId=VaadinExample \r\n\t-Dversion=1.0 \r\n\t-Dpackaging=war\r\n<\/pre>\n<p>Please update the <code>groupId<\/code> and <code>artifactId<\/code> as per your choice.<\/p>\n<h2>2. Import Generated Project to IDE<\/h2>\n<p>Now import the generated project into the IDE (in my case, it&#8217;s eclipse) as an existing Maven project.<\/p>\n<figure id=\"attachment_7729\" aria-describedby=\"caption-attachment-7729\" style=\"width: 279px\" class=\"wp-caption aligncenter\"><img loading=\"lazy\" src=\"\/\/howtodoinjava.com\/wp-content\/uploads\/2016\/09\/Vaadin-Hello-World-Application-Project-Structure.png\" alt=\"Vaadin Hello World Application Project Structure\" width=\"289\" height=\"482\" class=\"size-full wp-image-7729\" srcset=\"https:\/\/howtodoinjava.com\/wp-content\/uploads\/2016\/09\/Vaadin-Hello-World-Application-Project-Structure.png 289w, https:\/\/howtodoinjava.com\/wp-content\/uploads\/2016\/09\/Vaadin-Hello-World-Application-Project-Structure-180x300.png 180w\" sizes=\"(max-width: 289px) 100vw, 289px\" \/><figcaption id=\"caption-attachment-7729\" class=\"wp-caption-text\">Vaadin Hello World Application Project Structure<\/figcaption><\/figure>\n<p>The generated project contains a standard folder structure for any maven web application.<\/p>\n<h2>3. Generated files<\/h2>\n<p>Along with folder structure, we get given below generated files along with <strong>vaadin hello world project<\/strong>.<\/p>\n<h4>3.1. pom.xml<\/h4>\n<pre class=\"brush: xml; title: ; notranslate\" title=\"\">\r\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\r\n&lt;project xmlns=&quot;http:\/\/maven.apache.org\/POM\/4.0.0&quot; xmlns:xsi=&quot;http:\/\/www.w3.org\/2001\/XMLSchema-instance&quot;\r\n\txsi:schemaLocation=&quot;http:\/\/maven.apache.org\/POM\/4.0.0 http:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd;\r\n\t&lt;modelVersion&gt;4.0.0&lt;\/modelVersion&gt;\r\n\r\n\t&lt;groupId&gt;com.howtodoinjava.vaadin.demo&lt;\/groupId&gt;\r\n\t&lt;artifactId&gt;VaadinExample&lt;\/artifactId&gt;\r\n\t&lt;packaging&gt;war&lt;\/packaging&gt;\r\n\t&lt;version&gt;1.0&lt;\/version&gt;\r\n\t&lt;name&gt;VaadinExample&lt;\/name&gt;\r\n\r\n\t&lt;prerequisites&gt;\r\n\t\t&lt;maven&gt;3&lt;\/maven&gt;\r\n\t&lt;\/prerequisites&gt;\r\n\r\n\t&lt;properties&gt;\r\n\t\t&lt;vaadin.version&gt;7.7.0&lt;\/vaadin.version&gt;\r\n\t\t&lt;vaadin.plugin.version&gt;7.7.0&lt;\/vaadin.plugin.version&gt;\r\n\t\t&lt;jetty.plugin.version&gt;9.3.9.v20160517&lt;\/jetty.plugin.version&gt;\r\n\t\t&lt;project.build.sourceEncoding&gt;UTF-8&lt;\/project.build.sourceEncoding&gt;\r\n\t\t&lt;maven.compiler.source&gt;1.8&lt;\/maven.compiler.source&gt;\r\n\t\t&lt;maven.compiler.target&gt;1.8&lt;\/maven.compiler.target&gt;\r\n\t\t&lt;!-- If there are no local customisations, this can also be &quot;fetch&quot; or &quot;cdn&quot; --&gt;\r\n\t\t&lt;vaadin.widgetset.mode&gt;local&lt;\/vaadin.widgetset.mode&gt;\r\n\t&lt;\/properties&gt;\r\n\r\n\t&lt;repositories&gt;\r\n\t\t&lt;repository&gt;\r\n\t\t\t&lt;id&gt;vaadin-addons&lt;\/id&gt;\r\n\t\t\t&lt;url&gt;http:\/\/maven.vaadin.com\/vaadin-addons&lt;\/url&gt;\r\n\t\t&lt;\/repository&gt;\r\n\t\t&lt;repository&gt;\r\n\t\t\t&lt;id&gt;vaadin-snapshots&lt;\/id&gt;\r\n\t\t\t&lt;url&gt;https:\/\/oss.sonatype.org\/content\/repositories\/vaadin-snapshots\/&lt;\/url&gt;\r\n\t\t\t&lt;releases&gt;\r\n\t\t\t\t&lt;enabled&gt;false&lt;\/enabled&gt;\r\n\t\t\t&lt;\/releases&gt;\r\n\t\t\t&lt;snapshots&gt;\r\n\t\t\t\t&lt;enabled&gt;true&lt;\/enabled&gt;\r\n\t\t\t&lt;\/snapshots&gt;\r\n\t\t&lt;\/repository&gt;\r\n\t&lt;\/repositories&gt;\r\n\r\n\t&lt;dependencyManagement&gt;\r\n\t\t&lt;dependencies&gt;\r\n\t\t\t&lt;dependency&gt;\r\n\t\t\t\t&lt;groupId&gt;com.vaadin&lt;\/groupId&gt;\r\n\t\t\t\t&lt;artifactId&gt;vaadin-bom&lt;\/artifactId&gt;\r\n\t\t\t\t&lt;version&gt;${vaadin.version}&lt;\/version&gt;\r\n\t\t\t\t&lt;type&gt;pom&lt;\/type&gt;\r\n\t\t\t\t&lt;scope&gt;import&lt;\/scope&gt;\r\n\t\t\t&lt;\/dependency&gt;\r\n\t\t&lt;\/dependencies&gt;\r\n\t&lt;\/dependencyManagement&gt;\r\n\r\n\t&lt;dependencies&gt;\r\n\t\t&lt;dependency&gt;\r\n\t\t\t&lt;groupId&gt;javax.servlet&lt;\/groupId&gt;\r\n\t\t\t&lt;artifactId&gt;javax.servlet-api&lt;\/artifactId&gt;\r\n\t\t\t&lt;version&gt;3.0.1&lt;\/version&gt;\r\n\t\t\t&lt;scope&gt;provided&lt;\/scope&gt;\r\n\t\t&lt;\/dependency&gt;\r\n\t\t&lt;dependency&gt;\r\n\t\t\t&lt;groupId&gt;com.vaadin&lt;\/groupId&gt;\r\n\t\t\t&lt;artifactId&gt;vaadin-server&lt;\/artifactId&gt;\r\n\t\t&lt;\/dependency&gt;\r\n\t\t&lt;dependency&gt;\r\n\t\t\t&lt;groupId&gt;com.vaadin&lt;\/groupId&gt;\r\n\t\t\t&lt;artifactId&gt;vaadin-push&lt;\/artifactId&gt;\r\n\t\t&lt;\/dependency&gt;\r\n\t\t&lt;dependency&gt;\r\n\t\t\t&lt;groupId&gt;com.vaadin&lt;\/groupId&gt;\r\n\t\t\t&lt;artifactId&gt;vaadin-client-compiled&lt;\/artifactId&gt;\r\n\t\t&lt;\/dependency&gt;\r\n\t\t&lt;dependency&gt;\r\n\t\t\t&lt;groupId&gt;com.vaadin&lt;\/groupId&gt;\r\n\t\t\t&lt;artifactId&gt;vaadin-themes&lt;\/artifactId&gt;\r\n\t\t&lt;\/dependency&gt;\r\n\t&lt;\/dependencies&gt;\r\n\r\n\t&lt;build&gt;\r\n\t\t&lt;plugins&gt;\r\n\t\t\t&lt;plugin&gt;\r\n\t\t\t\t&lt;groupId&gt;org.apache.maven.plugins&lt;\/groupId&gt;\r\n\t\t\t\t&lt;artifactId&gt;maven-war-plugin&lt;\/artifactId&gt;\r\n\t\t\t\t&lt;version&gt;2.6&lt;\/version&gt;\r\n\t\t\t\t&lt;configuration&gt;\r\n\t\t\t\t\t&lt;failOnMissingWebXml&gt;false&lt;\/failOnMissingWebXml&gt;\r\n\t\t\t\t\t&lt;!-- Exclude an unnecessary file generated by the GWT compiler. --&gt;\r\n\t\t\t\t\t&lt;packagingExcludes&gt;WEB-INF\/classes\/VAADIN\/widgetsets\/WEB-INF\/**&lt;\/packagingExcludes&gt;\r\n\t\t\t\t&lt;\/configuration&gt;\r\n\t\t\t&lt;\/plugin&gt;\r\n\t\t\t&lt;plugin&gt;\r\n\t\t\t\t&lt;groupId&gt;com.vaadin&lt;\/groupId&gt;\r\n\t\t\t\t&lt;artifactId&gt;vaadin-maven-plugin&lt;\/artifactId&gt;\r\n\t\t\t\t&lt;version&gt;${vaadin.plugin.version}&lt;\/version&gt;\r\n\t\t\t\t&lt;executions&gt;\r\n\t\t\t\t\t&lt;execution&gt;\r\n\t\t\t\t\t\t&lt;goals&gt;\r\n\t\t\t\t\t\t\t&lt;goal&gt;update-theme&lt;\/goal&gt;\r\n\t\t\t\t\t\t\t&lt;goal&gt;update-widgetset&lt;\/goal&gt;\r\n\t\t\t\t\t\t\t&lt;goal&gt;compile&lt;\/goal&gt;\r\n\t\t\t\t\t\t\t&lt;!-- Comment out compile-theme goal to use on-the-fly theme compilation --&gt;\r\n\t\t\t\t\t\t\t&lt;goal&gt;compile-theme&lt;\/goal&gt;\r\n\t\t\t\t\t\t&lt;\/goals&gt;\r\n\t\t\t\t\t&lt;\/execution&gt;\r\n\t\t\t\t&lt;\/executions&gt;\r\n\t\t\t&lt;\/plugin&gt;\r\n\t\t\t&lt;plugin&gt;\r\n\t\t\t\t&lt;groupId&gt;org.apache.maven.plugins&lt;\/groupId&gt;\r\n\t\t\t\t&lt;artifactId&gt;maven-clean-plugin&lt;\/artifactId&gt;\r\n\t\t\t\t&lt;version&gt;3.0.0&lt;\/version&gt;\r\n\t\t\t\t&lt;!-- Clean up also any pre-compiled themes --&gt;\r\n\t\t\t\t&lt;configuration&gt;\r\n\t\t\t\t\t&lt;filesets&gt;\r\n\t\t\t\t\t\t&lt;fileset&gt;\r\n\t\t\t\t\t\t\t&lt;directory&gt;src\/main\/webapp\/VAADIN\/themes&lt;\/directory&gt;\r\n\t\t\t\t\t\t\t&lt;includes&gt;\r\n\t\t\t\t\t\t\t\t&lt;include&gt;**\/styles.css&lt;\/include&gt;\r\n\t\t\t\t\t\t\t\t&lt;include&gt;**\/styles.scss.cache&lt;\/include&gt;\r\n\t\t\t\t\t\t\t&lt;\/includes&gt;\r\n\t\t\t\t\t\t&lt;\/fileset&gt;\r\n\t\t\t\t\t&lt;\/filesets&gt;\r\n\t\t\t\t&lt;\/configuration&gt;\r\n\t\t\t&lt;\/plugin&gt;\r\n\r\n\t\t\t&lt;!-- The Jetty plugin allows us to easily test the development build by\r\n\t\t\t\trunning jetty:run on the command line. --&gt;\r\n\t\t\t&lt;plugin&gt;\r\n\t\t\t\t&lt;groupId&gt;org.eclipse.jetty&lt;\/groupId&gt;\r\n\t\t\t\t&lt;artifactId&gt;jetty-maven-plugin&lt;\/artifactId&gt;\r\n\t\t\t\t&lt;version&gt;${jetty.plugin.version}&lt;\/version&gt;\r\n\t\t\t\t&lt;configuration&gt;\r\n\t\t\t\t\t&lt;scanIntervalSeconds&gt;2&lt;\/scanIntervalSeconds&gt;\r\n\t\t\t\t&lt;\/configuration&gt;\r\n\t\t\t&lt;\/plugin&gt;\r\n\t\t&lt;\/plugins&gt;\r\n\t&lt;\/build&gt;\r\n\r\n\t&lt;profiles&gt;\r\n\t\t&lt;profile&gt;\r\n\t\t\t&lt;!-- Vaadin pre-release repositories --&gt;\r\n\t\t\t&lt;id&gt;vaadin-prerelease&lt;\/id&gt;\r\n\t\t\t&lt;activation&gt;\r\n\t\t\t\t&lt;activeByDefault&gt;false&lt;\/activeByDefault&gt;\r\n\t\t\t&lt;\/activation&gt;\r\n\r\n\t\t\t&lt;repositories&gt;\r\n\t\t\t\t&lt;repository&gt;\r\n\t\t\t\t\t&lt;id&gt;vaadin-prereleases&lt;\/id&gt;\r\n\t\t\t\t\t&lt;url&gt;http:\/\/maven.vaadin.com\/vaadin-prereleases&lt;\/url&gt;\r\n\t\t\t\t&lt;\/repository&gt;\r\n\t\t\t&lt;\/repositories&gt;\r\n\t\t\t&lt;pluginRepositories&gt;\r\n\t\t\t\t&lt;pluginRepository&gt;\r\n\t\t\t\t\t&lt;id&gt;vaadin-prereleases&lt;\/id&gt;\r\n\t\t\t\t\t&lt;url&gt;http:\/\/maven.vaadin.com\/vaadin-prereleases&lt;\/url&gt;\r\n\t\t\t\t&lt;\/pluginRepository&gt;\r\n\t\t\t&lt;\/pluginRepositories&gt;\r\n\t\t&lt;\/profile&gt;\r\n\t&lt;\/profiles&gt;\r\n\r\n&lt;\/project&gt;\r\n<\/pre>\n<h4>3.2. MyUI.java<\/h4>\n<pre class=\"brush: java; title: ; notranslate\" title=\"\">\r\npackage com.howtodoinjava.vaadin.demo;\r\n\r\nimport javax.servlet.annotation.WebServlet;\r\n\r\nimport com.vaadin.annotations.Theme;\r\nimport com.vaadin.annotations.VaadinServletConfiguration;\r\nimport com.vaadin.server.VaadinRequest;\r\nimport com.vaadin.server.VaadinServlet;\r\nimport com.vaadin.ui.Button;\r\nimport com.vaadin.ui.Label;\r\nimport com.vaadin.ui.TextField;\r\nimport com.vaadin.ui.UI;\r\nimport com.vaadin.ui.VerticalLayout;\r\n\r\n\/**\r\n * This UI is the application entry point. A UI may either represent a browser window \r\n * (or tab) or some part of an HTML page where a Vaadin application is embedded.\r\n * &lt;p&gt;\r\n * The UI is initialized using {@link #init(VaadinRequest)}. This method is intended to be \r\n * overridden to add a component to the user interface and initialize non-component functionality.\r\n *\/\r\n@Theme(&quot;mytheme&quot;)\r\npublic class MyUI extends UI {\r\n\r\n    @Override\r\n    protected void init(VaadinRequest vaadinRequest) {\r\n        final VerticalLayout layout = new VerticalLayout();\r\n        \r\n        final TextField name = new TextField();\r\n        name.setCaption(&quot;Type your name here:&quot;);\r\n\r\n        Button button = new Button(&quot;Click Me&quot;);\r\n        button.addClickListener( e -&gt; {\r\n            layout.addComponent(new Label(&quot;Thanks &quot; + name.getValue() \r\n                    + &quot;, it works!&quot;));\r\n        });\r\n        \r\n        layout.addComponents(name, button);\r\n        layout.setMargin(true);\r\n        layout.setSpacing(true);\r\n        \r\n        setContent(layout);\r\n    }\r\n\r\n    @WebServlet(urlPatterns = &quot;\/*&quot;, name = &quot;MyUIServlet&quot;, asyncSupported = true)\r\n    @VaadinServletConfiguration(ui = MyUI.class, productionMode = false)\r\n    public static class MyUIServlet extends VaadinServlet {\r\n    }\r\n}\r\n<\/pre>\n<h4>3.3. web.xml<\/h4>\n<p>If you want to use <code>web.xml<\/code> file, because your server does not support <code>servlet 3.0<\/code> specification, you can use this configuration in <code>web.xml<\/code> file.<\/p>\n<pre class=\"brush: xml; title: ; notranslate\" title=\"\">\r\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\r\n&lt;web-app id=&quot;WebApp_ID&quot; version=&quot;2.4&quot;\r\n\txmlns=&quot;http:\/\/java.sun.com\/xml\/ns\/j2ee&quot; xmlns:xsi=&quot;http:\/\/www.w3.org\/2001\/XMLSchema-instance&quot;\r\n\txsi:schemaLocation=&quot;http:\/\/java.sun.com\/xml\/ns\/j2ee\r\n     https:\/\/www.oracle.com\/java\/technologies\/;\r\n\r\n\t&lt;servlet&gt;\r\n\t\t&lt;servlet-name&gt;myservlet&lt;\/servlet-name&gt;\r\n\t\t&lt;servlet-class&gt;com.vaadin.server.VaadinServlet&lt;\/servlet-class&gt;\r\n\t\t&lt;init-param&gt;\r\n\t\t\t&lt;param-name&gt;UI&lt;\/param-name&gt;\r\n\t\t\t&lt;param-value&gt;com.howtodoinjava.vaadin.demo.MyUI&lt;\/param-value&gt;\r\n\t\t&lt;\/init-param&gt;\r\n\t&lt;\/servlet&gt;\r\n\r\n\t&lt;servlet-mapping&gt;\r\n\t\t&lt;servlet-name&gt;myservlet&lt;\/servlet-name&gt;\r\n\t\t&lt;url-pattern&gt;\/*&lt;\/url-pattern&gt;\r\n\t&lt;\/servlet-mapping&gt;\r\n&lt;\/web-app&gt;\r\n<\/pre>\n<p>Do not forget to remove <code>@WebServlet(urlPatterns = \"\/*\", name = \"MyUIServlet\", asyncSupported = true)<\/code> if you are using <code>web.xml<\/code> file.<\/p>\n<h2>4. Build the Project<\/h2>\n<p>Now it&#8217;s time to build the project so that it can download all the dependencies and include them into the project&#8217;s runtime.<\/p>\n<pre class=\"brush: java; title: ; notranslate\" title=\"\">\r\n$ mvn clean install\r\n<\/pre>\n<p>The above maven command will download the dependencies (it will take some time), and build the war file <code>VaadinExample-1.0.war<\/code>.<\/p>\n<h2>5. Run and Test Vaadin Hello World Application<\/h2>\n<p>Now it&#8217;s time to run the application. In the command prompt, run the following command to start included jetty server.<\/p>\n<pre class=\"brush: java; title: ; notranslate\" title=\"\">$mvn jetty:run<\/pre>\n<p>This will start the built-in jetty server and you can access the application at <code>http:\/\/localhost:8080\/<\/code>.<\/p>\n<figure id=\"attachment_7730\" aria-describedby=\"caption-attachment-7730\" style=\"width: 324px\" class=\"wp-caption aligncenter\"><img loading=\"lazy\" src=\"\/\/howtodoinjava.com\/wp-content\/uploads\/2016\/09\/Vaadin-Hello-World-Screen.png\" alt=\"Vaadin Hello World Screen\" width=\"334\" height=\"224\" class=\"size-full wp-image-7730\" srcset=\"https:\/\/howtodoinjava.com\/wp-content\/uploads\/2016\/09\/Vaadin-Hello-World-Screen.png 334w, https:\/\/howtodoinjava.com\/wp-content\/uploads\/2016\/09\/Vaadin-Hello-World-Screen-300x201.png 300w\" sizes=\"(max-width: 334px) 100vw, 334px\" \/><figcaption id=\"caption-attachment-7730\" class=\"wp-caption-text\">Vaadin Hello World Screen<\/figcaption><\/figure>\n<p>Now fill in your name or any string in the text box and click on the button. It will print the message below the button.<\/p>\n<figure id=\"attachment_7731\" aria-describedby=\"caption-attachment-7731\" style=\"width: 397px\" class=\"wp-caption aligncenter\"><img loading=\"lazy\" src=\"\/\/howtodoinjava.com\/wp-content\/uploads\/2016\/09\/Vaadin-Hello-World-Screen-2-.png\" alt=\"Vaadin Hello World Screen -2\" width=\"407\" height=\"250\" class=\"size-full wp-image-7731\" srcset=\"https:\/\/howtodoinjava.com\/wp-content\/uploads\/2016\/09\/Vaadin-Hello-World-Screen-2-.png 407w, https:\/\/howtodoinjava.com\/wp-content\/uploads\/2016\/09\/Vaadin-Hello-World-Screen-2--300x184.png 300w\" sizes=\"(max-width: 407px) 100vw, 407px\" \/><figcaption id=\"caption-attachment-7731\" class=\"wp-caption-text\">Vaadin Hello World Screen -2<\/figcaption><\/figure>\n<div class=\"noticeboxesde downgreennoticebox\"><a href=\"\/\/howtodoinjava.com\/wp-content\/downloads\/VaadinExample.zip\">Download Sourcecode<\/a><\/div>\n<p>Happy Learning !!<\/p>\n<p>Resources:<\/p>\n<p><a href=\"https:\/\/vaadin.com\/docs\/v8\/framework\/getting-started\/getting-started-archetypes.html\">Vaadin Archetypes<\/a><br \/>\n<a href=\"https:\/\/vaadin.com\/docs\/v8\/framework\/getting-started\/getting-started-maven.html\">Vaadin Maven Setup<\/a><\/p>\n","protected":false},"excerpt":{"rendered":"<p>In this example, we will learn to create vaadin hello world application using maven, and then we will run deploy the application in built-in jetty server.<\/p>\n","protected":false},"author":2,"featured_media":7731,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"categories":[931],"tags":[1439],"uagb_featured_image_src":{"full":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2016\/09\/Vaadin-Hello-World-Screen-2-.png",407,250,false],"thumbnail":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2016\/09\/Vaadin-Hello-World-Screen-2--150x150.png",150,150,true],"medium":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2016\/09\/Vaadin-Hello-World-Screen-2--300x184.png",300,184,true],"medium_large":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2016\/09\/Vaadin-Hello-World-Screen-2-.png",407,250,false],"large":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2016\/09\/Vaadin-Hello-World-Screen-2-.png",407,250,false],"1536x1536":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2016\/09\/Vaadin-Hello-World-Screen-2-.png",407,250,false],"2048x2048":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2016\/09\/Vaadin-Hello-World-Screen-2-.png",407,250,false],"yarpp-thumbnail":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2016\/09\/Vaadin-Hello-World-Screen-2-.png",120,74,false]},"uagb_author_info":{"display_name":"Lokesh Gupta","author_link":"https:\/\/howtodoinjava.com\/author\/lokeshgupta1981\/"},"uagb_comment_info":0,"uagb_excerpt":"In this example, we will learn to create vaadin hello world application using maven, and then we will run deploy the application in built-in jetty server.","_links":{"self":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts\/7728"}],"collection":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/comments?post=7728"}],"version-history":[{"count":0,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts\/7728\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/media\/7731"}],"wp:attachment":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/media?parent=7728"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/categories?post=7728"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/tags?post=7728"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}