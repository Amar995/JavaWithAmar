{"id":10972,"date":"2018-07-29T12:37:49","date_gmt":"2018-07-29T07:07:49","guid":{"rendered":"https:\/\/howtodoinjava.com\/?p=10972"},"modified":"2019-07-21T19:02:52","modified_gmt":"2019-07-21T13:32:52","slug":"jaxb-annotations","status":"publish","type":"post","link":"https:\/\/howtodoinjava.com\/jaxb\/jaxb-annotations\/","title":{"rendered":"JAXB Annotations"},"content":{"rendered":"<p>Learn about <strong>JAXB annotations<\/strong> in detail along with their usage during marshalling and unmarshalling operations.<\/p>\n<h2>1) List of JAXB Annotations<\/h2>\n<table class=\"mtr-table mtr-tr-th\">\n<tr>\n<th style=\"width: 160px;\" data-mtr-content=\"Annotation\" class=\"mtr-th-tag\"><div class=\"mtr-cell-content\">Annotation<\/div><\/th>\n<th style=\"width: 100px;\" data-mtr-content=\"Scope\" class=\"mtr-th-tag\"><div class=\"mtr-cell-content\">Scope<\/div><\/th>\n<th data-mtr-content=\"Description\" class=\"mtr-th-tag\"><div class=\"mtr-cell-content\">Description<\/div><\/th>\n<\/tr>\n<tr>\n<td data-mtr-content=\"Annotation\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\"><code><a href=\"#XmlRootElement\">@XmlRootElement<\/a><\/code><\/div><\/td>\n<td data-mtr-content=\"Scope\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\">Class, Enum<\/div><\/td>\n<td data-mtr-content=\"Description\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\">Defines the XML root element. Root Java classes need to be registered with the JAXB context when it is created.<\/div><\/td>\n<\/tr>\n<tr>\n<td data-mtr-content=\"Annotation\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\"><code><a href=\"#XmlAccessorType\">@XmlAccessorType<\/a><\/code><\/div><\/td>\n<td data-mtr-content=\"Scope\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\">Package, Class<\/div><\/td>\n<td data-mtr-content=\"Description\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\">Defines the fields and properties of your Java classes that the JAXB engine uses for binding. It has four values: <code>PUBLIC_MEMBER<\/code>, <code>FIELD<\/code>, <code>PROPERTY<\/code> and <code>NONE<\/code>.<\/div><\/td>\n<\/tr>\n<tr>\n<td data-mtr-content=\"Annotation\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\"><code><a href=\"#XmlAccessorOrder\">@XmlAccessorOrder<\/a><\/code><\/div><\/td>\n<td data-mtr-content=\"Scope\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\">Package, Class<\/div><\/td>\n<td data-mtr-content=\"Description\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\">Defines the sequential order of the children.<\/div><\/td>\n<\/tr>\n<tr>\n<td data-mtr-content=\"Annotation\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\"><code><a href=\"#XmlType\">@XmlType<\/a><\/code><\/div><\/td>\n<td data-mtr-content=\"Scope\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\">Class, Enum<\/div><\/td>\n<td data-mtr-content=\"Description\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\">Maps a Java class to a schema type. It defines the type name and order of its children.<\/div><\/td>\n<\/tr>\n<tr>\n<td data-mtr-content=\"Annotation\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\"><code><a href=\"#XmlElement\">@XmlElement<\/a><\/code><\/div><\/td>\n<td data-mtr-content=\"Scope\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\">Field<\/div><\/td>\n<td data-mtr-content=\"Description\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\">Maps a field or property to an XML element<\/div><\/td>\n<\/tr>\n<tr>\n<td data-mtr-content=\"Annotation\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\"><code><a href=\"#XmlAttribute\">@XmlAttribute<\/a><\/code><\/div><\/td>\n<td data-mtr-content=\"Scope\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\">Field<\/div><\/td>\n<td data-mtr-content=\"Description\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\">Maps a field or property to an XML attribute<\/div><\/td>\n<\/tr>\n<tr>\n<td data-mtr-content=\"Annotation\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\"><code><a href=\"#XmlTransient\">@XmlTransient<\/a><\/code><\/div><\/td>\n<td data-mtr-content=\"Scope\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\">Field<\/div><\/td>\n<td data-mtr-content=\"Description\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\">Prevents mapping a field or property to the XML Schema<\/div><\/td>\n<\/tr>\n<tr>\n<td data-mtr-content=\"Annotation\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\"><code><a href=\"#XmlValue\">@XmlValue<\/a><\/code><\/div><\/td>\n<td data-mtr-content=\"Scope\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\">Field<\/div><\/td>\n<td data-mtr-content=\"Description\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\">Maps a field or property to the text value on an XML tag.<\/div><\/td>\n<\/tr>\n<tr>\n<td data-mtr-content=\"Annotation\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\"><code><a href=\"#XmlList\">@XmlList<\/a><\/code><\/div><\/td>\n<td data-mtr-content=\"Scope\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\">Field, Parameter<\/div><\/td>\n<td data-mtr-content=\"Description\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\">Maps a collection to a list of values separated by space.<\/div><\/td>\n<\/tr>\n<tr>\n<td data-mtr-content=\"Annotation\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\"><code><a href=\"#XmlElementWrapper\">@XmlElementWrapper<\/a><\/code><\/div><\/td>\n<td data-mtr-content=\"Scope\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\">Field<\/div><\/td>\n<td data-mtr-content=\"Description\" class=\"mtr-td-tag\"><div class=\"mtr-cell-content\">Maps a Java collection to an XML wrapped collection<\/div><\/td>\n<\/tr>\n<\/table>\n<blockquote><p>Read More : <a href=\"https:\/\/howtodoinjava.com\/jaxb\/write-object-to-xml\/\">Convert Java Object to XML<\/a><\/p><\/blockquote>\n<p><a id=\"XmlRootElement\"><\/a><\/p>\n<h4>1.1) @XmlRootElement<\/h4>\n<p>This maps a class or an enum type to an XML root element. When a top-level class or an enum type is annotated with the <code>@XmlRootElement<\/code> annotation, then its value is represented as XML element in an XML document.<\/p>\n<pre class=\"brush: java; highlight: [1]; title: Employee.java; notranslate\" title=\"Employee.java\">\r\n@XmlRootElement(name = &quot;employee&quot;)\r\n@XmlAccessorType(XmlAccessType.PROPERTY)\r\npublic class Employee implements Serializable \r\n{\r\n\t\/\/More code\r\n}\r\n<\/pre>\n<p>Above will result into:<\/p>\n<pre class=\"brush: xml; title: employee.xml; notranslate\" title=\"employee.xml\">\r\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;\r\n&lt;employee&gt;\r\n\t\/\/....\r\n&lt;\/employee&gt;\r\n<\/pre>\n<p><a id=\"XmlAccessorType\"><\/a><\/p>\n<h4>1.2) @XmlAccessorType<\/h4>\n<p>It defines the fields or properties of your Java classes that the JAXB engine uses for including into generated XML. It has four possible values. <\/p>\n<ul>\n<li><code>FIELD<\/code> &#8211; Every non static, non transient field in a JAXB-bound class will be automatically bound to XML, unless annotated by <code>XmlTransient<\/code>.<\/li>\n<li><code>NONE<\/code> &#8211; None of the fields or properties is bound to XML unless they are specifically annotated with some of the JAXB annotations.<\/li>\n<li><code>PROPERTY<\/code> &#8211; Every getter\/setter pair in a JAXB-bound class will be automatically bound to XML, unless annotated by <code>XmlTransient<\/code>.<\/li>\n<li><code>PUBLIC_MEMBER<\/code> &#8211; Every public getter\/setter pair and every public field will be automatically bound to XML, unless annotated by <code>XmlTransient<\/code>.<\/li>\n<li>Default value is <code>PUBLIC_MEMBER<\/code>.<\/li>\n<\/ul>\n<pre class=\"brush: java; highlight: [2]; title: Employee.java; notranslate\" title=\"Employee.java\">\r\n@XmlRootElement(name = &quot;employee&quot;)\r\n@XmlAccessorType(XmlAccessType.FIELD)\r\npublic class Employee implements Serializable \r\n{\r\n\tprivate Integer id;\r\n\tprivate String firstName;\r\n\tprivate String lastName;\r\n}\r\n<\/pre>\n<p>Above will result into:<\/p>\n<pre class=\"brush: xml; title: employee.xml; notranslate\" title=\"employee.xml\">\r\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;\r\n&lt;employee&gt;\r\n\t&lt;firstName&gt;Lokesh&lt;\/firstName&gt;\r\n    &lt;id&gt;1&lt;\/id&gt;\r\n    &lt;lastName&gt;Gupta&lt;\/lastName&gt;\r\n&lt;\/employee&gt;\r\n<\/pre>\n<p><a id=\"XmlAccessorOrder\"><\/a><\/p>\n<h4>1.3) @XmlAccessorOrder<\/h4>\n<p>Controls the ordering of fields and properties in a class. You can have predefined values <code>ALPHABETICAL<\/code> or <code>UNDEFINED<\/code>.<\/p>\n<pre class=\"brush: java; highlight: [2]; title: Employee.java; notranslate\" title=\"Employee.java\">\r\n@XmlRootElement(name = &quot;employee&quot;)\r\n@XmlAccessorType(XmlAccessType.FIELD)\r\npublic class Employee implements Serializable \r\n{\r\n\tprivate Integer id;\r\n\tprivate String firstName;\r\n\tprivate String lastName;\r\n\tprivate Department department;\r\n}\r\n<\/pre>\n<p>Above will result into:<\/p>\n<pre class=\"brush: xml; title: employee.xml; notranslate\" title=\"employee.xml\">\r\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\r\n&lt;employee&gt;\r\n   &lt;department&gt;\r\n      &lt;id&gt;101&lt;\/id&gt;\r\n      &lt;name&gt;IT&lt;\/name&gt;\r\n   &lt;\/department&gt;\r\n   &lt;firstName&gt;Lokesh&lt;\/firstName&gt;\r\n   &lt;id&gt;1&lt;\/id&gt;\r\n   &lt;lastName&gt;Gupta&lt;\/lastName&gt;\r\n&lt;\/employee&gt;\r\n<\/pre>\n<p><a id=\"XmlType\"><\/a><\/p>\n<h4>1.4) @XmlType<\/h4>\n<p>It maps a Java class or enum type to a schema type. It defines the type name, namespace and order of its children. It is used to match the element in the schema to element in the model.<\/p>\n<pre class=\"brush: java; highlight: [2]; title: Employee.java; notranslate\" title=\"Employee.java\">\r\n@XmlRootElement(name = &quot;employee&quot;)\r\n@XmlType(propOrder={&quot;id&quot;, &quot;firstName&quot; , &quot;lastName&quot;, &quot;department&quot; })\r\npublic class Employee implements Serializable \r\n{\r\n\tprivate Integer id;\r\n\tprivate String firstName;\r\n\tprivate String lastName;\r\n\tprivate Department department;\r\n}\r\n<\/pre>\n<p><a id=\"XmlElement\"><\/a><\/p>\n<h4>1.5) @XmlElement<\/h4>\n<p>Maps a JavaBean property to an XML element derived from property name.<\/p>\n<pre class=\"brush: java; highlight: [4,7]; title: Employee.java; notranslate\" title=\"Employee.java\">\r\n@XmlRootElement(name = &quot;employee&quot;)\r\npublic class Employee implements Serializable \r\n{\r\n\t@XmlElement(name=employeeId)\r\n\tprivate Integer id;\r\n\r\n\t@XmlElement\r\n\tprivate String firstName;\r\n\r\n\tprivate String lastName;\r\n\tprivate Department department;\r\n}\r\n<\/pre>\n<p>Above will result into:<\/p>\n<pre class=\"brush: xml; title: employee.xml; notranslate\" title=\"employee.xml\">\r\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\r\n&lt;employee&gt;\r\n\t&lt;employeeId&gt;1&lt;\/employeeId&gt;\r\n   \t&lt;firstName&gt;Lokesh&lt;\/firstName&gt;\r\n&lt;\/employee&gt;\r\n<\/pre>\n<p><a id=\"XmlAttribute\"><\/a><\/p>\n<h4>1.6) @XmlAttribute<\/h4>\n<p>Maps a JavaBean property to an XML attribute.<\/p>\n<pre class=\"brush: java; highlight: [4]; title: Employee.java; notranslate\" title=\"Employee.java\">\r\n@XmlRootElement(name = &quot;employee&quot;)\r\npublic class Employee implements Serializable \r\n{\r\n\t@XmlAttribute\r\n\tprivate Integer id;\r\n\r\n\tprivate String firstName;\r\n\tprivate String lastName;\r\n\tprivate Department department;\r\n}\r\n<\/pre>\n<p>Above will result into:<\/p>\n<pre class=\"brush: xml; highlight: [2]; title: employee.xml; notranslate\" title=\"employee.xml\">\r\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\r\n&lt;employee id=&quot;1&quot;&gt;\r\n   &lt;department&gt;\r\n      &lt;id&gt;101&lt;\/id&gt;\r\n      &lt;name&gt;IT&lt;\/name&gt;\r\n   &lt;\/department&gt;\r\n   &lt;firstName&gt;Lokesh&lt;\/firstName&gt;\r\n   &lt;lastName&gt;Gupta&lt;\/lastName&gt;\r\n&lt;\/employee&gt;\r\n<\/pre>\n<p><a id=\"XmlTransient\"><\/a><\/p>\n<h4>1.7) @XmlTransient<\/h4>\n<p>Prevents the mapping of a JavaBean property\/type to XML representation. When placed on a class, it indicates that the class shouldn&#8217;t be mapped to XML by itself. Properties on such class will be mapped to XML along with its derived classes as if the class is inlined. <\/p>\n<p><code>@XmlTransient<\/code> is mutually exclusive with all other JAXB defined annotations.<\/p>\n<pre class=\"brush: java; highlight: [2,5]; title: Employee.java; notranslate\" title=\"Employee.java\">\r\n@XmlRootElement(name = &quot;employee&quot;)\r\n@XmlAccessorType(XmlAccessType.FIELD)\r\npublic class Employee implements Serializable \r\n{\r\n\t@XmlTransient\r\n\tprivate Integer id;\r\n\r\n\tprivate String firstName;\r\n\tprivate String lastName;\r\n\tprivate Department department;\r\n}\r\n<\/pre>\n<p>Above will result into:<\/p>\n<pre class=\"brush: xml; title: id field is not serialized; notranslate\" title=\"id field is not serialized\">\r\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\r\n&lt;employee&gt;\r\n   &lt;firstName&gt;Lokesh&lt;\/firstName&gt;\r\n   &lt;lastName&gt;Gupta&lt;\/lastName&gt;\r\n   &lt;department&gt;\r\n      &lt;id&gt;101&lt;\/id&gt;\r\n      &lt;name&gt;IT&lt;\/name&gt;\r\n   &lt;\/department&gt;\r\n&lt;\/employee&gt;\r\n<\/pre>\n<p><a id=\"XmlValue\"><\/a><\/p>\n<h4>1.8) @XmlValue<\/h4>\n<p>Enables mapping a class to an XML Schema complex type with a simpleContent or an XML Schema simple type. It&#8217;s more related to schema mapping to model mapping.<\/p>\n<p><a id=\"XmlList\"><\/a><\/p>\n<h4>1.9) @XmlList<\/h4>\n<p>Used to map a property to a list simple type. It allows multiple values to be represented as <strong>whitespace-separated tokens<\/strong> in a single element. <\/p>\n<pre class=\"brush: java; highlight: [5]; title: Employee.java; notranslate\" title=\"Employee.java\">\r\n@XmlRootElement(name = &quot;employee&quot;)\r\n@XmlAccessorType(XmlAccessType.FIELD)\r\npublic class Employee implements Serializable \r\n{\r\n\tprivate List&lt;String&gt; hobbies;\r\n}\r\n\r\n\/\/\r\n\r\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\r\n&lt;employee&gt;\r\n\t&lt;hobbies&gt;Swimming&lt;\/hobbies&gt;\r\n    &lt;hobbies&gt;Playing&lt;\/hobbies&gt;\r\n    &lt;hobbies&gt;Karate&lt;\/hobbies&gt;\r\n&lt;\/employee&gt;\r\n<\/pre>\n<p>After using <code>@XmlList<\/code>, observe the output.<\/p>\n<pre class=\"brush: java; highlight: [5]; title: Employee.java; notranslate\" title=\"Employee.java\">\r\n@XmlRootElement(name = &quot;employee&quot;)\r\n@XmlAccessorType(XmlAccessType.FIELD)\r\npublic class Employee implements Serializable \r\n{\r\n\t@XmlList \r\n\tprivate List&lt;String&gt; hobbies;\r\n}\r\n\r\n\/\/\r\n\r\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\r\n&lt;employee&gt;\r\n\t&lt;hobbies&gt;Swimming Playing Karate&lt;\/hobbies&gt;\r\n&lt;\/employee&gt;\r\n<\/pre>\n<p>]<\/p>\n<p><a id=\"XmlElementWrapper\"><\/a><\/p>\n<h4>1.10) @XmlElementWrapper<\/h4>\n<p>Generates a wrapper element around XML representation. This is primarily intended to be used to produce a wrapper XML element around collections. So, it must be used with collection property.<\/p>\n<pre class=\"brush: java; highlight: [2,5]; title: Employee.java; notranslate\" title=\"Employee.java\">\r\n@XmlRootElement(name = &quot;employee&quot;)\r\n@XmlAccessorType(XmlAccessType.FIELD)\r\npublic class Employee implements Serializable \r\n{\r\n\t@XmlElementWrapper(name=&quot;hobbies&quot;)\r\n\t@XmlElement(name=&quot;hobby&quot;)\r\n\tprivate List&lt;String&gt; hobbies;\r\n}\r\n<\/pre>\n<p>Above will result into:<\/p>\n<pre class=\"brush: xml; title: id field is not serialized; notranslate\" title=\"id field is not serialized\">\r\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\r\n&lt;employee&gt;\r\n\t&lt;hobbies&gt;\r\n        &lt;hobby&gt;Swimming&lt;\/hobby&gt;\r\n        &lt;hobby&gt;Playing&lt;\/hobby&gt;\r\n        &lt;hobby&gt;Karate&lt;\/hobby&gt;\r\n    &lt;\/hobbies&gt;\r\n&lt;\/employee&gt;\r\n<\/pre>\n<h2>2) JAXB Annotation Example<\/h2>\n<p>Learn to apply JAXB annotations on model classes and then marshal the object into the XML file.<\/p>\n<pre class=\"brush: java; title: Employee.java; notranslate\" title=\"Employee.java\">\r\npackage com.howtodoinjava.demo.model;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.List;\r\n\r\nimport javax.xml.bind.annotation.XmlAccessType;\r\nimport javax.xml.bind.annotation.XmlAccessorType;\r\nimport javax.xml.bind.annotation.XmlElement;\r\nimport javax.xml.bind.annotation.XmlElementWrapper;\r\nimport javax.xml.bind.annotation.XmlRootElement;\r\n\r\n@XmlRootElement(name = &quot;employee&quot;)\r\n@XmlAccessorType(XmlAccessType.FIELD)\r\npublic class Employee implements Serializable {\r\n\r\n\tprivate static final long serialVersionUID = 1L;\r\n\r\n\tprivate Integer id;\r\n\tprivate String firstName;\r\n\tprivate String lastName;\r\n\t\r\n\tprivate Department department;\r\n\t\r\n\t@XmlElementWrapper(name=&quot;hobbies&quot;)\r\n\t@XmlElement(name=&quot;hobby&quot;)\r\n\tprivate List&lt;String&gt; hobbies;\r\n\r\n\tpublic Employee() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic Employee(int id, String fName, String lName, Department department) {\r\n\t\tsuper();\r\n\t\tthis.id = id;\r\n\t\tthis.firstName = fName;\r\n\t\tthis.lastName = lName;\r\n\t\tthis.department = department;\r\n\t}\r\n\r\n\t\/\/Setters and Getters\r\n}\r\n<\/pre>\n<pre class=\"brush: java; title: JaxbExample.java; notranslate\" title=\"JaxbExample.java\">\r\npackage com.howtodoinjava.demo;\r\n\r\nimport java.io.File;\r\nimport java.util.Arrays;\r\nimport javax.xml.bind.JAXBContext;\r\nimport javax.xml.bind.JAXBException;\r\nimport javax.xml.bind.Marshaller;\r\nimport com.howtodoinjava.demo.model.Department;\r\nimport com.howtodoinjava.demo.model.Employee;\r\n\r\npublic class JaxbExample \r\n{\r\n\tpublic static void main(String[] args) \r\n\t{\r\n\t\tEmployee employee = new Employee(1, &quot;Lokesh&quot;, &quot;Gupta&quot;, new Department(101, &quot;IT&quot;));\r\n\r\n\t\temployee.setHobbies(Arrays.asList(&quot;Swimming&quot;,&quot;Playing&quot;, &quot;Karate&quot;));\r\n\r\n\t\tjaxbObjectToXML(employee);\r\n\t}\r\n\r\n\tprivate static void jaxbObjectToXML(Employee employee) \r\n\t{\r\n\t    try {\r\n\t        JAXBContext jaxbContext = JAXBContext.newInstance(Employee.class);\r\n\t        Marshaller jaxbMarshaller = jaxbContext.createMarshaller();\r\n\r\n\t        jaxbMarshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE); \/\/ To format XML\r\n\r\n\t        \/\/Print XML String to Console\r\n\t        jaxbMarshaller.marshal(employee, new File(&quot;employee.xml&quot;));\r\n\t        \r\n\t    } catch (JAXBException e) {\r\n\t        e.printStackTrace();\r\n\t    }\r\n\t}\r\n}\r\n<\/pre>\n<pre class=\"brush: xml; title: employee.xml; notranslate\" title=\"employee.xml\">\r\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;\r\n&lt;employee&gt;\r\n    &lt;id&gt;1&lt;\/id&gt;\r\n    &lt;firstName&gt;Lokesh&lt;\/firstName&gt;\r\n    &lt;lastName&gt;Gupta&lt;\/lastName&gt;\r\n    &lt;department&gt;\r\n        &lt;id&gt;101&lt;\/id&gt;\r\n        &lt;name&gt;IT&lt;\/name&gt;\r\n    &lt;\/department&gt;\r\n    &lt;hobbies&gt;\r\n        &lt;hobby&gt;Swimming&lt;\/hobby&gt;\r\n        &lt;hobby&gt;Playing&lt;\/hobby&gt;\r\n        &lt;hobby&gt;Karate&lt;\/hobby&gt;\r\n    &lt;\/hobbies&gt;\r\n&lt;\/employee&gt;\r\n<\/pre>\n<p>Drop me your questions in comments section.<\/p>\n<p>Happy Learning !!<\/p>\n<p>Reference: <a href=\"https:\/\/docs.oracle.com\/javaee\/6\/api\/javax\/xml\/bind\/annotation\/adapters\/XmlJavaTypeAdapter.html\">JAXB Annotations Java Doc<\/a><\/p>\n","protected":false},"excerpt":{"rendered":"<p>Learn about JAXB annotations in detail along with their usage during marshalling and unmarshalling operations eg. @XmlRootElement, @XmlElement and @XmlList,<\/p>\n","protected":false},"author":2,"featured_media":10945,"comment_status":"open","ping_status":"closed","sticky":false,"template":"","format":"standard","meta":[],"categories":[20],"tags":[],"uagb_featured_image_src":{"full":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2018\/07\/jaxb.jpg",700,400,false],"thumbnail":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2018\/07\/jaxb.jpg",150,86,false],"medium":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2018\/07\/jaxb.jpg",300,171,false],"medium_large":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2018\/07\/jaxb.jpg",700,400,false],"large":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2018\/07\/jaxb.jpg",700,400,false],"1536x1536":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2018\/07\/jaxb.jpg",700,400,false],"2048x2048":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2018\/07\/jaxb.jpg",700,400,false],"yarpp-thumbnail":["https:\/\/howtodoinjava.com\/wp-content\/uploads\/2018\/07\/jaxb.jpg",120,69,false]},"uagb_author_info":{"display_name":"Lokesh Gupta","author_link":"https:\/\/howtodoinjava.com\/author\/lokeshgupta1981\/"},"uagb_comment_info":8,"uagb_excerpt":"Learn about JAXB annotations in detail along with their usage during marshalling and unmarshalling operations eg. @XmlRootElement, @XmlElement and @XmlList,","_links":{"self":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts\/10972"}],"collection":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/users\/2"}],"replies":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/comments?post=10972"}],"version-history":[{"count":0,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/posts\/10972\/revisions"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/media\/10945"}],"wp:attachment":[{"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/media?parent=10972"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/categories?post=10972"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/howtodoinjava.com\/wp-json\/wp\/v2\/tags?post=10972"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}